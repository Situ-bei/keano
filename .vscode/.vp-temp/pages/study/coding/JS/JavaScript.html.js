import comp from "F:/桌面/【Vue】/Blog/keano/.vscode/.vp-temp/pages/study/coding/JS/JavaScript.html.vue"
const data = JSON.parse("{\"path\":\"/study/coding/JS/JavaScript.html\",\"title\":\"JavaScript\",\"lang\":\"zh-CN\",\"frontmatter\":{\"number headings\":\"auto, first-level 1, max 6, contents ^TOC, skip ^skipped, 1.1\",\"title\":\"JavaScript\",\"category\":[\"前端\",\"JS\"],\"tags\":[\"JS\",\"JS 基础\"],\"article\":false,\"date\":\"2024-06-29T22:48:00.000Z\",\"description\":\"1 Java script 简介 1.1 历史 1.1.1 起源 JS 诞生于 1995 年，当时网景公司（Netscape）开发的 Navigator 浏览器拥有着世界第一的市场占有率。网景公司一时风光无两。 当时的浏览器只能只能运行包含了 HTML 和 CSS 的静态网页，网页就相当于是报纸或杂志的电子版，没有任何的动态交互行为。网景公司预见到静态...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://situ-bei.github.io/keano/keano/study/coding/JS/JavaScript.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"KEANO\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"JavaScript\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1 Java script 简介 1.1 历史 1.1.1 起源 JS 诞生于 1995 年，当时网景公司（Netscape）开发的 Navigator 浏览器拥有着世界第一的市场占有率。网景公司一时风光无两。 当时的浏览器只能只能运行包含了 HTML 和 CSS 的静态网页，网页就相当于是报纸或杂志的电子版，没有任何的动态交互行为。网景公司预见到静态...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"website\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://my-wp.oss-cn-beijing.aliyuncs.com/wp-content/uploads/2022/08/20220808210844195.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2024-10-13T12:32:26.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JS\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JS 基础\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2024-06-29T22:48:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2024-10-13T12:32:26.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"WebPage\\\",\\\"name\\\":\\\"JavaScript\\\",\\\"description\\\":\\\"1 Java script 简介 1.1 历史 1.1.1 起源 JS 诞生于 1995 年，当时网景公司（Netscape）开发的 Navigator 浏览器拥有着世界第一的市场占有率。网景公司一时风光无两。 当时的浏览器只能只能运行包含了 HTML 和 CSS 的静态网页，网页就相当于是报纸或杂志的电子版，没有任何的动态交互行为。网景公司预见到静态...\\\"}\"]]},\"headers\":[{\"level\":2,\"title\":\"1.1 历史\",\"slug\":\"_1-1-历史\",\"link\":\"#_1-1-历史\",\"children\":[{\"level\":3,\"title\":\"1.1.1 起源\",\"slug\":\"_1-1-1-起源\",\"link\":\"#_1-1-1-起源\",\"children\":[]},{\"level\":3,\"title\":\"1.1.2 战争\",\"slug\":\"_1-1-2-战争\",\"link\":\"#_1-1-2-战争\",\"children\":[]},{\"level\":3,\"title\":\"1.1.3 转折\",\"slug\":\"_1-1-3-转折\",\"link\":\"#_1-1-3-转折\",\"children\":[]}]},{\"level\":2,\"title\":\"1.2 特点\",\"slug\":\"_1-2-特点\",\"link\":\"#_1-2-特点\",\"children\":[]},{\"level\":2,\"title\":\"1.3 解释型\",\"slug\":\"_1-3-解释型\",\"link\":\"#_1-3-解释型\",\"children\":[]},{\"level\":2,\"title\":\"1.4 函数式编程\",\"slug\":\"_1-4-函数式编程\",\"link\":\"#_1-4-函数式编程\",\"children\":[]},{\"level\":2,\"title\":\"1.5 单线程\",\"slug\":\"_1-5-单线程\",\"link\":\"#_1-5-单线程\",\"children\":[]},{\"level\":2,\"title\":\"1.6 面向对象\",\"slug\":\"_1-6-面向对象\",\"link\":\"#_1-6-面向对象\",\"children\":[]},{\"level\":2,\"title\":\"1.7 扩展 ES\",\"slug\":\"_1-7-扩展-es\",\"link\":\"#_1-7-扩展-es\",\"children\":[]},{\"level\":2,\"title\":\"2.1 基本语法\",\"slug\":\"_2-1-基本语法\",\"link\":\"#_2-1-基本语法\",\"children\":[]},{\"level\":2,\"title\":\"4.1 数值（Number）\",\"slug\":\"_4-1-数值-number\",\"link\":\"#_4-1-数值-number\",\"children\":[{\"level\":3,\"title\":\"4.1.1 类型转换\",\"slug\":\"_4-1-1-类型转换\",\"link\":\"#_4-1-1-类型转换\",\"children\":[]},{\"level\":3,\"title\":\"4.1.2 运算符\",\"slug\":\"_4-1-2-运算符\",\"link\":\"#_4-1-2-运算符\",\"children\":[]},{\"level\":3,\"title\":\"4.1.3 代码块\",\"slug\":\"_4-1-3-代码块\",\"link\":\"#_4-1-3-代码块\",\"children\":[]}]},{\"level\":2,\"title\":\"4.2 对象\",\"slug\":\"_4-2-对象\",\"link\":\"#_4-2-对象\",\"children\":[]},{\"level\":2,\"title\":\"4.3 函数（Function）\",\"slug\":\"_4-3-函数-function\",\"link\":\"#_4-3-函数-function\",\"children\":[{\"level\":3,\"title\":\"4.3.1 windows 对象\",\"slug\":\"_4-3-1-windows-对象\",\"link\":\"#_4-3-1-windows-对象\",\"children\":[]},{\"level\":3,\"title\":\"4.3.2 作用域（scope）\",\"slug\":\"_4-3-2-作用域-scope\",\"link\":\"#_4-3-2-作用域-scope\",\"children\":[]},{\"level\":3,\"title\":\"4.3.3 this 隐含参数\",\"slug\":\"_4-3-3-this-隐含参数\",\"link\":\"#_4-3-3-this-隐含参数\",\"children\":[]},{\"level\":3,\"title\":\"4.3.4 严格模式\",\"slug\":\"_4-3-4-严格模式\",\"link\":\"#_4-3-4-严格模式\",\"children\":[]}]},{\"level\":2,\"title\":\"4.4 面相对象编程（OOP）\",\"slug\":\"_4-4-面相对象编程-oop\",\"link\":\"#_4-4-面相对象编程-oop\",\"children\":[{\"level\":3,\"title\":\"4.4.1 类（class）\",\"slug\":\"_4-4-1-类-class\",\"link\":\"#_4-4-1-类-class\",\"children\":[]},{\"level\":3,\"title\":\"4.4.2 封装、继承和多态\",\"slug\":\"_4-4-2-封装、继承和多态\",\"link\":\"#_4-4-2-封装、继承和多态\",\"children\":[]},{\"level\":3,\"title\":\"4.4.3 对象的结构\",\"slug\":\"_4-4-3-对象的结构\",\"link\":\"#_4-4-3-对象的结构\",\"children\":[]},{\"level\":3,\"title\":\"4.4.4 旧类\",\"slug\":\"_4-4-4-旧类\",\"link\":\"#_4-4-4-旧类\",\"children\":[]},{\"level\":3,\"title\":\"4.4.5 面向对象编程的总结\",\"slug\":\"_4-4-5-面向对象编程的总结\",\"link\":\"#_4-4-5-面向对象编程的总结\",\"children\":[]}]},{\"level\":2,\"title\":\"4.5 数组（Array）\",\"slug\":\"_4-5-数组-array\",\"link\":\"#_4-5-数组-array\",\"children\":[{\"level\":3,\"title\":\"4.5.1 数组（Array）\",\"slug\":\"_4-5-1-数组-array\",\"link\":\"#_4-5-1-数组-array\",\"children\":[]},{\"level\":3,\"title\":\"4.5.2 遍历数组\",\"slug\":\"_4-5-2-遍历数组\",\"link\":\"#_4-5-2-遍历数组\",\"children\":[]},{\"level\":3,\"title\":\"4.5.3 数组的方法（非破坏性）\",\"slug\":\"_4-5-3-数组的方法-非破坏性\",\"link\":\"#_4-5-3-数组的方法-非破坏性\",\"children\":[]},{\"level\":3,\"title\":\"4.5.4 数组的方法（破坏性）\",\"slug\":\"_4-5-4-数组的方法-破坏性\",\"link\":\"#_4-5-4-数组的方法-破坏性\",\"children\":[]},{\"level\":3,\"title\":\"4.5.5 数组的去重\",\"slug\":\"_4-5-5-数组的去重\",\"link\":\"#_4-5-5-数组的去重\",\"children\":[]},{\"level\":3,\"title\":\"4.5.6 排序\",\"slug\":\"_4-5-6-排序\",\"link\":\"#_4-5-6-排序\",\"children\":[]},{\"level\":3,\"title\":\"4.5.7 封装函数\",\"slug\":\"_4-5-7-封装函数\",\"link\":\"#_4-5-7-封装函数\",\"children\":[]},{\"level\":3,\"title\":\"4.5.8 高阶函数\",\"slug\":\"_4-5-8-高阶函数\",\"link\":\"#_4-5-8-高阶函数\",\"children\":[]},{\"level\":3,\"title\":\"4.5.9 函数的.call()和.apply()和.bind()\",\"slug\":\"_4-5-9-函数的-call-和-apply-和-bind\",\"link\":\"#_4-5-9-函数的-call-和-apply-和-bind\",\"children\":[]}]},{\"level\":2,\"title\":\"5.1 if 语句\",\"slug\":\"_5-1-if-语句\",\"link\":\"#_5-1-if-语句\",\"children\":[]},{\"level\":2,\"title\":\"5.2 switch 语句\",\"slug\":\"_5-2-switch-语句\",\"link\":\"#_5-2-switch-语句\",\"children\":[]},{\"level\":2,\"title\":\"6.1 while 循环\",\"slug\":\"_6-1-while-循环\",\"link\":\"#_6-1-while-循环\",\"children\":[]},{\"level\":2,\"title\":\"6.2 do-while 循环\",\"slug\":\"_6-2-do-while-循环\",\"link\":\"#_6-2-do-while-循环\",\"children\":[]},{\"level\":2,\"title\":\"6.3 for 循环\",\"slug\":\"_6-3-for-循环\",\"link\":\"#_6-3-for-循环\",\"children\":[]},{\"level\":2,\"title\":\"6.4 循环嵌套\",\"slug\":\"_6-4-循环嵌套\",\"link\":\"#_6-4-循环嵌套\",\"children\":[]},{\"level\":2,\"title\":\"6.5 break 和 continue\",\"slug\":\"_6-5-break-和-continue\",\"link\":\"#_6-5-break-和-continue\",\"children\":[]},{\"level\":2,\"title\":\"7.1 解构赋值(数组)\",\"slug\":\"_7-1-解构赋值-数组\",\"link\":\"#_7-1-解构赋值-数组\",\"children\":[]},{\"level\":2,\"title\":\"7.2 解构赋值(对象)\",\"slug\":\"_7-2-解构赋值-对象\",\"link\":\"#_7-2-解构赋值-对象\",\"children\":[]},{\"level\":2,\"title\":\"7.3 对象的序列化（JSON）\",\"slug\":\"_7-3-对象的序列化-json\",\"link\":\"#_7-3-对象的序列化-json\",\"children\":[{\"level\":3,\"title\":\"7.3.1 JSON 可以进行深复制\",\"slug\":\"_7-3-1-json-可以进行深复制\",\"link\":\"#_7-3-1-json-可以进行深复制\",\"children\":[]}]},{\"level\":2,\"title\":\"7.4 map\",\"slug\":\"_7-4-map\",\"link\":\"#_7-4-map\",\"children\":[]},{\"level\":2,\"title\":\"7.5 Set\",\"slug\":\"_7-5-set\",\"link\":\"#_7-5-set\",\"children\":[]},{\"level\":2,\"title\":\"7.6 Math\",\"slug\":\"_7-6-math\",\"link\":\"#_7-6-math\",\"children\":[]},{\"level\":2,\"title\":\"7.7 Date\",\"slug\":\"_7-7-date\",\"link\":\"#_7-7-date\",\"children\":[{\"level\":3,\"title\":\"7.7.1 日期的格式化\",\"slug\":\"_7-7-1-日期的格式化\",\"link\":\"#_7-7-1-日期的格式化\",\"children\":[]}]},{\"level\":2,\"title\":\"7.8 包装类\",\"slug\":\"_7-8-包装类\",\"link\":\"#_7-8-包装类\",\"children\":[{\"level\":3,\"title\":\"7.8.1 字符串的方法\",\"slug\":\"_7-8-1-字符串的方法\",\"link\":\"#_7-8-1-字符串的方法\",\"children\":[]}]},{\"level\":2,\"title\":\"7.9 正则表达式\",\"slug\":\"_7-9-正则表达式\",\"link\":\"#_7-9-正则表达式\",\"children\":[{\"level\":3,\"title\":\"7.9.1 正则表达式的语法\",\"slug\":\"_7-9-1-正则表达式的语法\",\"link\":\"#_7-9-1-正则表达式的语法\",\"children\":[]}]},{\"level\":2,\"title\":\"7.10 垃圾回收\",\"slug\":\"_7-10-垃圾回收\",\"link\":\"#_7-10-垃圾回收\",\"children\":[]},{\"level\":2,\"title\":\"8.1 DOM 简介\",\"slug\":\"_8-1-dom-简介\",\"link\":\"#_8-1-dom-简介\",\"children\":[{\"level\":3,\"title\":\"8.1.1 为什么需要 DOM\",\"slug\":\"_8-1-1-为什么需要-dom\",\"link\":\"#_8-1-1-为什么需要-dom\",\"children\":[]},{\"level\":3,\"title\":\"8.1.2 什么是 DOM\",\"slug\":\"_8-1-2-什么是-dom\",\"link\":\"#_8-1-2-什么是-dom\",\"children\":[]},{\"level\":3,\"title\":\"8.1.3 DOM 概念\",\"slug\":\"_8-1-3-dom-概念\",\"link\":\"#_8-1-3-dom-概念\",\"children\":[]}]},{\"level\":2,\"title\":\"8.2 如何使用 DOM\",\"slug\":\"_8-2-如何使用-dom\",\"link\":\"#_8-2-如何使用-dom\",\"children\":[{\"level\":3,\"title\":\"8.2.1 文档节点 (Document Node)\",\"slug\":\"_8-2-1-文档节点-document-node\",\"link\":\"#_8-2-1-文档节点-document-node\",\"children\":[]},{\"level\":3,\"title\":\"8.2.2 元素节点（Element Node）\",\"slug\":\"_8-2-2-元素节点-element-node\",\"link\":\"#_8-2-2-元素节点-element-node\",\"children\":[]},{\"level\":3,\"title\":\"8.2.3 文本节点(Text Node)\",\"slug\":\"_8-2-3-文本节点-text-node\",\"link\":\"#_8-2-3-文本节点-text-node\",\"children\":[]},{\"level\":3,\"title\":\"8.2.4 属性节点 (Attr Node)\",\"slug\":\"_8-2-4-属性节点-attr-node\",\"link\":\"#_8-2-4-属性节点-attr-node\",\"children\":[]}]},{\"level\":2,\"title\":\"8.3 事件节点（Event Node）\",\"slug\":\"_8-3-事件节点-event-node\",\"link\":\"#_8-3-事件节点-event-node\",\"children\":[]},{\"level\":2,\"title\":\"8.4 文档加载事件\",\"slug\":\"_8-4-文档加载事件\",\"link\":\"#_8-4-文档加载事件\",\"children\":[]},{\"level\":2,\"title\":\"8.5 Dom 的修改\",\"slug\":\"_8-5-dom-的修改\",\"link\":\"#_8-5-dom-的修改\",\"children\":[{\"level\":3,\"title\":\"8.5.1 节点的克隆(cloneNode )\",\"slug\":\"_8-5-1-节点的克隆-clonenode\",\"link\":\"#_8-5-1-节点的克隆-clonenode\",\"children\":[]}]},{\"level\":2,\"title\":\"8.6 修改 CSS 样式\",\"slug\":\"_8-6-修改-css-样式\",\"link\":\"#_8-6-修改-css-样式\",\"children\":[{\"level\":3,\"title\":\"8.6.1 读取样式\",\"slug\":\"_8-6-1-读取样式\",\"link\":\"#_8-6-1-读取样式\",\"children\":[]},{\"level\":3,\"title\":\"8.6.2 操作 class 类改变 CSS\",\"slug\":\"_8-6-2-操作-class-类改变-css\",\"link\":\"#_8-6-2-操作-class-类改变-css\",\"children\":[]}]},{\"level\":2,\"title\":\"8.7 事件对象\",\"slug\":\"_8-7-事件对象\",\"link\":\"#_8-7-事件对象\",\"children\":[{\"level\":3,\"title\":\"8.7.1 不同的事件对象和事件的冒泡（bubble）\",\"slug\":\"_8-7-1-不同的事件对象和事件的冒泡-bubble\",\"link\":\"#_8-7-1-不同的事件对象和事件的冒泡-bubble\",\"children\":[]},{\"level\":3,\"title\":\"8.7.2 事件的委派\",\"slug\":\"_8-7-2-事件的委派\",\"link\":\"#_8-7-2-事件的委派\",\"children\":[]},{\"level\":3,\"title\":\"8.7.3 事件的捕获\",\"slug\":\"_8-7-3-事件的捕获\",\"link\":\"#_8-7-3-事件的捕获\",\"children\":[]}]},{\"level\":2,\"title\":\"9.1 Navigator\",\"slug\":\"_9-1-navigator\",\"link\":\"#_9-1-navigator\",\"children\":[]},{\"level\":2,\"title\":\"9.2 Location\",\"slug\":\"_9-2-location\",\"link\":\"#_9-2-location\",\"children\":[]},{\"level\":2,\"title\":\"9.3 History\",\"slug\":\"_9-3-history\",\"link\":\"#_9-3-history\",\"children\":[]},{\"level\":2,\"title\":\"9.4 定时器\",\"slug\":\"_9-4-定时器\",\"link\":\"#_9-4-定时器\",\"children\":[{\"level\":3,\"title\":\"9.4.1 事件循环(event loop)\",\"slug\":\"_9-4-1-事件循环-event-loop\",\"link\":\"#_9-4-1-事件循环-event-loop\",\"children\":[]}]}],\"git\":{\"createdTime\":1728822746000,\"updatedTime\":1728822746000,\"contributors\":[{\"name\":\"situ-bei\",\"email\":\"2606405907@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":104.56,\"words\":31367},\"filePathRelative\":\"study/coding/JS/JavaScript.md\",\"localizedDate\":\"2024年6月30日\",\"excerpt\":\"\\n<h2>1.1 历史</h2>\\n<div class=\\\"language- line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"\\\" data-title=\\\"\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code><span class=\\\"line\\\"><span>JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, supporting object-oriented, imperative, and declarative (e.g. functional programming) styles.</span></span>\\n<span class=\\\"line\\\"><span></span></span>\\n<span class=\\\"line\\\"><span>JavaScript（JS）是一种轻量级、解释式或即时编译的编程语言，具有一流的功能。虽然它作为网页的脚本语言最为人所知，但许多非浏览器环境也使用它，如Node.js、Apache CouchDB和Adobe Acrobat。JavaScript是一种基于原型、多范式、单线程、动态的语言，支持面向对象、命令式和声明式（如函数式编程）风格。</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}

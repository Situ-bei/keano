import{_ as h,c as d,e,a as s,h as l,b as n,f as t,r as k,o as p}from"./app-CA4T8FdL.js";const r={};function c(o,i){const a=k("font");return p(),d("div",null,[i[11]||(i[11]=e(`<h1 id="css2-基础" tabindex="-1"><a class="header-anchor" href="#css2-基础"><span>CSS2 基础</span></a></h1><h2 id="_1-1-css简介" tabindex="-1"><a class="header-anchor" href="#_1-1-css简介"><span>1.1 CSS简介</span></a></h2><p>![[Pasted image 20240627154233.png|475]]</p><ul><li>CSS 的全称为：层叠样式表 ( Cascading Style Sheets ) 。</li><li>CSS 也是一种标记语言，用于给 HTML 结构设置样式，例如：文字大小、颜色、元素宽高等等。</li></ul><blockquote><p>简单理解： CSS 可以美化 HTML , 让 HTML 更漂亮。 核心思想： HTML 搭建结构， CSS 添加样式，实现了：结构与样式的分离。</p></blockquote><h2 id="_1-2-css的编写位置" tabindex="-1"><a class="header-anchor" href="#_1-2-css的编写位置"><span>1.2 CSS的编写位置</span></a></h2><h3 id="_1-2-1-行内样式" tabindex="-1"><a class="header-anchor" href="#_1-2-1-行内样式"><span>1.2.1 行内样式</span></a></h3><ul><li>写在标签的 style 属性中，（又称：内联样式）。</li><li>语法：<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">color:red;font-size:60px;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;欢迎来到尚硅谷学习&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><blockquote><p><strong>注意点：</strong></p><ol><li>style 属性的值不能随便写，写要符合 CSS 语法规范，是 名:值; 的形式。</li><li>行内样式表，只能控制当前标签的样式，对其他标签无效。</li></ol></blockquote><blockquote><p><strong>存在的问题：</strong> 书写繁琐、样式不能复用、并且没有体现出：结构与样式分离 的思想，不推荐大量使用，只有对当前元素添加简单样式时，才偶尔使用。</p></blockquote><h3 id="_1-2-2-内部样式" tabindex="-1"><a class="header-anchor" href="#_1-2-2-内部样式"><span>1.2.2 内部样式</span></a></h3><ul><li>写在 html 页面内部，将所有的 CSS 代码提取出来，单独放在 <code>&lt;style&gt;</code> 标签中。</li><li>语法：<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><blockquote><p>注意点：</p><ol><li><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般都放在 <code>&lt;head&gt;</code> 标签 中。</li><li>此种写法：样式可以复用、代码结构清晰。</li></ol></blockquote><blockquote><p>存在的问题：</p><ol><li>并没有实现：结构与样式完全分离。</li><li>多个 HTML 页面无法复用样式。</li></ol></blockquote><h3 id="_1-2-3-外部样式" tabindex="-1"><a class="header-anchor" href="#_1-2-3-外部样式"><span>1.2.3 外部样式</span></a></h3><ul><li><p>写在单独的 .css 文件中，随后在 HTML 文件中引入使用。</p></li><li><p>语法： 1. 新建一个扩展名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.在 HTML 文件中引入 .css 文件。</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;stylesheet&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./xxx.css&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><blockquote><p>[!注意点：]</p><ol><li><code>&lt;link&gt;</code> 标签要写在 <code>&lt;head&gt;</code> 标签中。</li><li><code>&lt;link&gt;</code> 标签属性说明： href ：引入的文档来自于哪里。 rel ：( relation ：关系）说明引入的文档与当前文档之间的关系。</li><li>外部样式的优势：样式可以复用、结构清晰、可触发浏览器的缓存机制，提高访问速度 ，实现了结构与样式的完全分离。</li><li>实际开发中，几乎都使用外部样式，这是最推荐的使用方式！</li></ol></blockquote><h2 id="_1-3-样式表的优先级" tabindex="-1"><a class="header-anchor" href="#_1-3-样式表的优先级"><span>1.3 样式表的优先级</span></a></h2><ul><li>优先级规则：行内样式 &gt; 内部样式 = 外部样式</li></ul><blockquote><ol><li>内部样式、外部样式，这二者的优先级相同，且：后面的 会覆盖 前面的（简记：“后来者居上”）。</li><li>同一个样式表中，优先级也和编写顺序有关，且：后面的 会覆盖 前面的（简记：“后来者居上”）。</li></ol></blockquote><h2 id="_1-4-css语法规范" tabindex="-1"><a class="header-anchor" href="#_1-4-css语法规范"><span>1.4 CSS语法规范</span></a></h2><p>CSS 语法规范由两部分构成：</p><ul><li>选择器：找到要添加样式的元素。</li><li>声明块：设置具体的样式（声明块是由一个或多个声明组成的），声明的格式为： <strong>属性名: 属性值;</strong></li></ul><blockquote><p>备注1：最后一个声明后的分号理论上能省略，但最好还是写上。 备注2：选择器与声明块之间，属性名与属性值之间，均有一个空格，理论上能省略，但最好还是写上。</p></blockquote><ul><li>注释的写法：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 给h1元素添加样式 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	/* 设置文字颜色为红色 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	/* 设置文字大小为40px */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_1-5-css代码风格" tabindex="-1"><a class="header-anchor" href="#_1-5-css代码风格"><span>1.5 CSS代码风格</span></a></h2><ul><li><p>展开风格 —— 开发时推荐，便于维护和调试。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>紧凑风格 —— 项目上线时推荐，可减小文件体积。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;font-size:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><blockquote><p>备注： 项目上线时，我们会通过工具将【展开风格】的代码，变成【紧凑风格】，这样可以减小文件体积，节约网络流量，同时也能让用户打开网页时速度更快。</p></blockquote><h1 id="_2-css选择器" tabindex="-1"><a class="header-anchor" href="#_2-css选择器"><span>2 CSS选择器</span></a></h1><h2 id="_2-1-css基本选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-css基本选择器"><span>2.1 CSS基本选择器</span></a></h2><ol><li>通配选择器</li><li>元素选择器</li><li>类选择器</li><li>id 选择器</li></ol><h3 id="_2-1-1-通配选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-1-通配选择器"><span>2.1.1 通配选择器</span></a></h3><ul><li><p>作用：可以选中所有的 HTML 元素。</p></li><li><p>语法：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>举例：</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/* 选中所有元素 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">* {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: orange;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: 40px;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>备注：目前来看通配选择器貌似有点鸡肋，但后面清除样式时，会对我们有很大帮助，后面会详细讲。</p></blockquote></li></ul><h3 id="_2-1-2-元素选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-2-元素选择器"><span>2.1.2 元素选择器</span></a></h3><ul><li><p>作用：为页面中 某种元素 统一设置样式。</p></li><li><p>语法：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">标签名</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	属性名: 属性值;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中所有h1元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">orange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中所有p元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>备注：元素选择器无法实现差异化设置，例如上面的代码中，所有的 <code>p</code> 元素效果都一样。</p></blockquote></li></ul><h3 id="_2-1-3-类选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-3-类选择器"><span>2.1.3 类选择器</span></a></h3><ul><li>作用：根据元素的 class 值，来选中某些元素。</li></ul><blockquote><p>class 翻译过来有：种类、类别的含义，所以 class 值，又称：类名。</p></blockquote><ul><li>语法：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.类名 {</span></span>
<span class="line"><span>	属性名: 属性值;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中所有class值为speak的元素 */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.speak</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中所有class值为answer的元素 */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.answer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>注意点：</li></ul><blockquote><ol><li>元素的 <code>class</code> 属性值不带 . ，但 CSS 的类选择器要带 . 。</li><li>class 值，是我们自定义的，按照标准：不要使用纯数字、不要使用中文、尽量使用英文与数字的组合，若由多个单词组成，使用 - 做连接，例如： <code>left-menu</code> ，且命名要有意义，做到 “见名知意”。</li><li>一个元素不能写多个 class 属性，下面是 错误示例： <code>&lt;h1 class=&quot;speak&quot; class=&quot;big&quot;&gt;你好啊&lt;/h1&gt;</code></li><li>一个元素的 class 属性，能写多个值，要用空格隔开，例如： <code>&lt;h1 class=&quot;speak big&quot;&gt;你好啊&lt;/h1&gt;</code></li></ol></blockquote><h3 id="_2-1-4-id选择器" tabindex="-1"><a class="header-anchor" href="#_2-1-4-id选择器"><span>2.1.4 ID选择器</span></a></h3><ul><li>作用：根据元素的 id 属性值，来精准的选中某个元素。</li><li>语法：<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>#id值 {</span></span>
<span class="line"><span>	属性名: 属性值;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中id值为earthy的那个元素 */</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">#earthy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>注意： <ul><li>id 属性值：尽量由字母、数字、下划线( _ )、短杠( - )组成，最好以字母开头、不要包含空格、区分大小写。</li><li>一个元素只能拥有一个 id 属性，多个元素的 id 属性值不能相同。</li><li>一个元素可以同时拥有 id 和 class 属性。</li></ul></li></ul><h3 id="_2-1-5-基本选择器总结" tabindex="-1"><a class="header-anchor" href="#_2-1-5-基本选择器总结"><span>2.1.5 基本选择器总结</span></a></h3>`,43)),i[12]||(i[12]=s("table",{"color:red":""},[s("thead",null,[s("tr",null,[s("th",null,"基本选择器"),s("th",null,"特点"),s("th",null,"用法")])]),s("tbody",null,[s("tr",{"color:red":""},[s("td",null,"通配选择器"),s("td",null,"选中所有标签，一般用于清除样式。"),s("td",null,"*")]),s("tr",{"color:red":""},[s("td",null,"元素选择器"),s("td",null,"选中所有同种标签，但是不能差异化选择。"),s("td",null,"h1")]),s("tr",{"color:red":""},[s("td",null,"类选择器"),s("td",null,"选中所有特定类名（ class 值）的元素 —— 使用频率很高。"),s("td",null,".say")]),s("tr",null,[s("td",null,"ID 选择器"),s("td",null,"选中特定 id 值的那个元素（唯一的）。"),s("td",null,"#earthy")])])],-1)),i[13]||(i[13]=e(`<h2 id="_2-2-css复合选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-css复合选择器"><span>2.2 CSS复合选择器</span></a></h2><ul><li>CSS选择器整体分类两大类：</li></ul><ol><li><p>基本选择器：</p><ul><li>①通配选择器</li><li>②元素选择器</li><li>③类选择器</li><li>④ ID 选择器</li></ul></li><li><p>复合选择器：</p><ul><li>①交集选择器</li><li>②并集选择器</li><li>③后代选择器</li><li>④子元素选择器</li></ul></li></ol><h3 id="_2-2-1-交集选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-1-交集选择器"><span>2.2.1 交集选择器</span></a></h3><ul><li>作用：选中同时符合多个条件的元素。</li></ul><blockquote><p>交集有并且的含义（通俗理解：即......又...... 的意思），例如：年轻且长得帅。</p></blockquote><ul><li><p>语法：<code>选择器1选择器2选择器3...选择器n {}</code></p></li><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中：类名为beauty的p元素，为此种写法用的非常多！！！！ */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.beauty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中：类名包含rich和beauty的元素 */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.rich.beauty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">green</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注意：</p><ol><li>有标签名，标签名必须写在前面。</li><li>id 选择器、通配选择器，理论上可以作为交集的条件，但实际应用中几乎不用 —— 因为没有意义。</li><li>交集选择器中不可能出现两个元素选择器，因为一个元素，不可能即是 <code>p</code> 元素又是 <code>span</code> 元素。</li><li>用的最多的交集选择器是：元素选择器配合类名选择器，例如： <code>p.beauty</code> 。</li></ol></li></ul><h3 id="_2-2-2-并集选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-2-并集选择器"><span>2.2.2 并集选择器</span></a></h3><ul><li>作用：选中多个选择器对应的元素，又称：分组选择器。</li></ul><blockquote><p>所谓并集就是或者的含义（通俗理解：要么......要么...... 的意思），例如：给我转10万块钱或者我报警。</p></blockquote><ul><li>语法：<code>选择器1, 选择器2, 选择器3, ... 选择器n {}</code></li></ul><blockquote><p>多个选择器通过 , 连接，此处 , 的含义就是：或。</p></blockquote><ul><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中id为peiqi，或类名为rich，或类名为beauty的元素 */</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">#peiqi</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.rich</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.beauty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">skyblue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注意：</p><ol><li>并集选择器，我们一般竖着写。</li><li>任何形式的选择器，都可以作为并集选择器的一部分 。</li><li>并集选择器，通常用于集体声明，可以缩小样式表体积。</li></ol></li></ul><h3 id="_2-2-3-html元素间的关系" tabindex="-1"><a class="header-anchor" href="#_2-2-3-html元素间的关系"><span>2.2.3 HTML元素间的关系</span></a></h3><ul><li>分为：①父元素、②子元素、③祖先元素、④后代元素、⑤兄弟元素。</li></ul><ol><li><p>父元素：直接包裹某个元素的元素，就是该元素的父元素。 ![[Pasted image 20240627202939.png|400]]</p></li><li><p>子元素：被父元素直接包含的元素（简记：儿子元素）。 ![[Pasted image 20240627203111.png|400]]</p></li><li><p>祖先元素：父亲的父亲......，一直往外找，都是祖先。 ![[Pasted image 20240627203203.png|400]]</p></li><li><p>后代元素：儿子的儿子......，一直往里找，都是后代。 ![[Pasted image 20240627203259.png|400]]</p></li></ol><blockquote><p>备注：子元素，也算是后代元素的一种。 例如：张三的儿子，也算是张三的后代，但一般还是称呼：儿子。</p></blockquote><ol start="5"><li>兄弟元素：具有相同父元素的元素，互为兄弟元素。 ![[Pasted image 20240627203430.png|400]]</li></ol><h3 id="_2-2-4-后代选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-4-后代选择器"><span>2.2.4 后代选择器</span></a></h3><ul><li>作用：选中指定元素中，符合要求的后代元素。</li><li>语法：选择器1 选择器2 选择器3 ... 选择器n {} （先写祖先，再写后代）</li></ul><blockquote><p>选择器之间，用空格隔开，空格可以理解为：&quot; xxx 中的&quot;，其实就是后代的意思。 选择器 1234....n ，可以是我们之前学的任何一种选择器。</p></blockquote><ul><li>举例：<div class="language-css line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="css" data-title="css" style="--vp-collapsed-lines:15;--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中ul中的所有li */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ul</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> li</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中ul中所有li中的a */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ul</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> li</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">orange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中类名为subject元素中的所有li */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.subject</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> li</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中类名为subject元素中的所有类名为front-end的li */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.subject</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> li</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.front-end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div></li></ul><p>注意：</p><ol><li>后代选择器，最终选择的是后代，不选中祖先。</li><li>儿子、孙子、重孙子，都算是后代。</li><li>结构一定要符合之前讲的 HTML 嵌套要求，例如：不能 <code>p</code> 中写 <code>h1 ~ h6</code> 。</li></ol><h3 id="_2-2-5-子代选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-5-子代选择器"><span>2.2.5 子代选择器</span></a></h3><ul><li>作用：选中指定元素中，符合要求的子元素（儿子元素）。（先写父，再写子）</li></ul><blockquote><p>子代选择器又称：子元素选择器、子选择器。</p></blockquote><ul><li>语法：<code>选择器1 &gt; 选择器2 &gt; 选择器3 &gt; ...... 选择器n {}</code></li></ul><blockquote><p>选择器之间，用 &gt; 隔开， &gt; 可以理解为：&quot; xxx 的子代&quot;，其实就是儿子的意思。 选择器 1234....n ，可以是我们之前学的任何一种选择器。</p></blockquote><ul><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* div中的子代a元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 类名为persons的元素中的子代a元素 */</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.persons</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注意：</p><ol><li>子代选择器，最终选择的是子代，不是父级。</li><li>子、孙子、重孙子、重重孙子 ...... 统称后代！，子就是指儿子。</li></ol></li></ul><h3 id="_2-2-6-兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-6-兄弟选择器"><span>2.2.6 兄弟选择器</span></a></h3><h4 id="_2-2-6-1-相邻兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-6-1-相邻兄弟选择器"><span>2.2.6.1 相邻兄弟选择器：</span></a></h4><ul><li>作用：选中指定元素后，符合条件的相邻兄弟元素。</li></ul><blockquote><p>所谓相邻，就是紧挨着他的下一个，简记：睡在我下铺的兄弟。</p></blockquote><ul><li>语法： <code>选择器1+选择器2 {}</code> 。</li><li>示例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中div后相邻的兄弟p元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-2-6-2-通用兄弟选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-6-2-通用兄弟选择器"><span>2.2.6.2 通用兄弟选择器：</span></a></h4><ul><li>作用：选中指定元素后，符合条件的所有兄弟元素。（简记：睡在我下铺的所有兄弟）</li><li>语法： <code>选择器1~选择器2 {}</code> 。</li><li>实例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中div后的所有的兄弟p元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>注意：两种兄弟选择器，选择的是下面的兄弟。</li></ul><h3 id="_2-2-7-属性选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-7-属性选择器"><span>2.2.7 属性选择器</span></a></h3><ul><li>作用：选中属性值符合一定要求的元素。</li><li>语法： <ol><li>[属性名] 选中具有某个属性的元素。</li><li>[属性名=&quot;值&quot;] 选中包含某个属性，且属性值等于指定值的元素。</li><li>[属性名^=&quot;值&quot;] 选中包含某个属性，且属性值以指定的值开头的元素。</li><li>[属性名$=&quot;值&quot;] 选中包含某个属性，且属性值以指定的值结尾的元素。</li><li>[属性名*=“值”] 选择包含某个属性，属性值包含指定值的元素。</li></ol></li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中具有title属性的元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">title</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中title属性值为atguigu的元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;atguigu&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中title属性值以a开头的元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">^=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中title属性值以u结尾的元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;u&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 选中title属性值包含g的元素 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">*=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;g&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{color:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-2-8-伪类选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-8-伪类选择器"><span>2.2.8 伪类选择器</span></a></h3><ul><li>作用：选中特殊状态的元素。</li></ul><blockquote><p>如何理解“伪” ? — 虚假的，不是真的。 如何理解“伪类”？ — 像类( class )，但不是类，是元素的一种特殊状态。</p></blockquote><p><strong>常用的伪类选择器</strong>：</p><ol><li><p><strong>动态伪类</strong>：</p><ol><li>:link 超链接未被访问的状态。</li><li>:visited 超链接访问过的状态。</li><li>:hover 鼠标悬停在元素上的状态。</li><li>:active 元素激活的状态。</li><li>:focus 获取焦点的元素。</li></ol></li></ol><blockquote><p>什么是激活？—— 按下鼠标不松开。 注意点：遵循 LVHA 的顺序，即： link 、 visited 、 hover 、 active 。</p><p>表单类元素才能使用 :focus 伪类。 当用户：点击元素、触摸元素、或通过键盘的 “ tab ” 键等方式，选择元素时，就是获得焦点。</p></blockquote><ol start="2"><li><strong>结构伪类</strong> 常用的：</li></ol><blockquote><ol><li><code>:first-child</code> 所有兄弟元素中的第一个。</li><li><code>:last-child</code> 所有兄弟元素中的最后一个。</li><li><code>:nth-child(n)</code> 所有兄弟元素中的第 n 个。</li><li><code>:first-of-type</code> 所有同类型兄弟元素中的第一个。</li><li><code>:last-of-type</code> 所有同类型兄弟元素中的最后一个。</li><li><code>:nth-of-type(n)</code> 所有同类型兄弟元素中的 第n个 。</li></ol></blockquote><ul><li><strong>关于 n 的值</strong>：</li></ul><blockquote><ol><li>0 或 不写 ：什么都选不中 —— 几乎不用。</li><li>n ：选中所有子元素 —— 几乎不用。</li><li>1~正无穷的整数 ：选中对应序号的子元素。</li><li>2n 或 even ：选中序号为偶数的子元素。</li><li>2n+1 或 odd ：选中序号为奇数的子元素。</li><li>-n+3 ：选中的是前 3 个。</li></ol></blockquote><ul><li><strong>了解即可</strong>：</li></ul><blockquote><ol><li>:nth-last-child(n) 所有兄弟元素中的倒数第 n 个。</li><li>:nth-last-of-type(n) 所有同类型兄弟元素中的 倒数第n个 。</li><li>:only-child 选择没有兄弟的元素（独生子女）。</li><li>:only-of-type 选择没有同类型兄弟的元素。</li><li>:root 根元素。</li><li>:empty 内容为空元素（空格也算内容）。</li></ol></blockquote><ol start="3"><li><strong>否定伪类</strong>：</li></ol><blockquote><p><code>:not(选择器)</code> 排除满足括号中条件的元素。</p></blockquote><ol start="4"><li><strong>UI伪类</strong>：</li></ol><blockquote><ul><li>:checked 被选中的复选框或单选按钮。</li><li>:enable 可用的表单元素（没有 disabled 属性）。</li><li>:disabled 不可用的表单元素（有 disabled 属性）。</li></ul></blockquote><ol start="5"><li><strong>目标伪类</strong>（了解）</li></ol><blockquote><p>:target 选中锚点指向的元素。</p></blockquote><ol start="6"><li><strong>语言伪类</strong>（了解）</li></ol><blockquote><p>:lang() 根据指定的语言选择元素（本质是看 lang 属性的值）。</p></blockquote><h3 id="_2-2-9-伪元素选择器" tabindex="-1"><a class="header-anchor" href="#_2-2-9-伪元素选择器"><span>2.2.9 伪元素选择器</span></a></h3><ul><li>作用：选中元素中的一些特殊位置。</li><li>常用伪元素： <ul><li>::first-letter 选中元素中的第一个文字。</li><li>::first-line 选中元素中的第一行文字。</li><li>::selection 选中被鼠标选中的内容。</li><li>::placeholder 选中输入框的提示文字。</li><li>::before 在元素最开始的位置，创建一个子元素（必须用 content 属性指定内容）。</li><li>::after 在元素最后的位置，创建一个子元素（必须用 content 属性指定内容）。</li></ul></li></ul><h2 id="_2-3-选择器的优先级-权重" tabindex="-1"><a class="header-anchor" href="#_2-3-选择器的优先级-权重"><span>2.3 选择器的优先级（权重）</span></a></h2><p>通过不同的选择器，选中相同的元素 ，并且为相同的样式名设置不同的值时，就发生了样式的冲突。 到底应用哪个样式，此时就需要看优先级了。</p><ul><li>简单描述：</li></ul><blockquote><p>行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器。</p></blockquote><ul><li>详细描述： <ol><li>计算方式：每个选择器，都可计算出一组权重，格式为： (a,b,c)</li></ol></li></ul><blockquote><ul><li>a : ID 选择器的个数。</li><li>b : 类、伪类、属性 选择器的个数。</li><li>c : 元素、伪元素 选择器的个数。 例如：![[Pasted image 20240627214353.png]]</li></ul></blockquote><ol start="2"><li>比较规则：按照从左到右的顺序，依次比较大小，当前位胜出后，后面的不再对比，例如：</li></ol><blockquote><ul><li>(1,0,0) &gt; (0,2,2)</li><li>(1,1,0) &gt; (1,0,3)</li><li>(1,1,3) &gt; (1,1,2)</li></ul></blockquote><ol start="3"><li>特殊规则： <ol><li>行内样式权重大于所有选择器。</li><li>!important 的权重，大于行内样式，大于所有选择器，权重最高！</li></ol></li><li>图示：![[Pasted image 20240627214804.png|400]]</li></ol><h1 id="_3-css三大特性" tabindex="-1"><a class="header-anchor" href="#_3-css三大特性"><span>3 CSS三大特性</span></a></h1><h2 id="_3-1-层叠性" tabindex="-1"><a class="header-anchor" href="#_3-1-层叠性"><span>3.1 层叠性</span></a></h2><ul><li>概念：如果发生了样式冲突，那就会根据一定的规则（选择器优先级），进行样式的层叠（覆盖）。</li></ul><blockquote><p>什么是样式冲突？ ——— 元素的同一个样式名，被设置了不同的值，这就是冲突。</p></blockquote><h2 id="_3-2-继承性" tabindex="-1"><a class="header-anchor" href="#_3-2-继承性"><span>3.2 继承性</span></a></h2><ul><li>概念：元素会自动拥有其父元素、或其祖先元素上所设置的某些样式。</li><li>规则：优先继承离得近的。</li><li>常见的可继承属性：</li></ul><blockquote><p>text-?? ， font-?? ， line-?? 、 color ......</p></blockquote><ul><li>备注：参照MDN网站，可查询属性是否可被继承。</li></ul><h2 id="_3-3-优先级" tabindex="-1"><a class="header-anchor" href="#_3-3-优先级"><span>3.3 优先级</span></a></h2><ul><li>简单聊： !important &gt; 行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 元素选择器 &gt; * &gt; 继承的样式。</li><li>详细聊：需要计算权重。</li></ul><blockquote><p>计算权重时需要注意：并集选择器的每一个部分是分开算的！</p></blockquote><h1 id="_4-css常用属性" tabindex="-1"><a class="header-anchor" href="#_4-css常用属性"><span>4 CSS常用属性</span></a></h1><h2 id="_4-1-像素的概念" tabindex="-1"><a class="header-anchor" href="#_4-1-像素的概念"><span>4.1 像素的概念</span></a></h2><ul><li>概念：我们的电脑屏幕是，是由一个一个“小点”组成的，每个“小点”，就是一个像素（px）。</li><li>规律：像素点越小，呈现的内容就越清晰、越细腻。 ![[Pasted image 20240627215722.png|400]]</li></ul><blockquote><p>注意点：如果电脑设置中开启了缩放，那么就会影响一些工具的测量结果，但这无所谓，因为我们工作中都是参考详细的设计稿，去给元素设置宽高。</p></blockquote><h2 id="_4-2-颜色的表示" tabindex="-1"><a class="header-anchor" href="#_4-2-颜色的表示"><span>4.2 颜色的表示</span></a></h2><h3 id="_4-2-1-表示方式一-颜色名" tabindex="-1"><a class="header-anchor" href="#_4-2-1-表示方式一-颜色名"><span>4.2.1 表示方式一：颜色名</span></a></h3><ul><li>编写方式：直接使用颜色对应的英文单词，编写比较简单，例如： <ol><li>红色：red</li><li>绿色：green</li><li>蓝色：blue</li><li>紫色：purple</li><li>橙色：orange</li><li>灰色：gray ......</li></ol></li></ul><blockquote><ol><li>颜色名这种方式，表达的颜色比较单一，所以用的并不多。</li><li>具体颜色名参考 MDN 官方文档： https://developer.mozilla.org/en-US/docs/Web/CSS/named-color</li></ol></blockquote><h3 id="_4-2-2-表示方式二-rgb-或-rgba" tabindex="-1"><a class="header-anchor" href="#_4-2-2-表示方式二-rgb-或-rgba"><span>4.2.2 表示方式二：rgb 或 rgba</span></a></h3><ul><li>编写方式：使用 红、黄、蓝 这三种光的三原色进行组合。 <ul><li>r 表示 红色</li><li>g 表示 绿色</li><li>b 表示 蓝色</li><li>a 表示 透明度</li></ul></li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 使用 0~255 之间的数字表示一种颜色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(255</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 255</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 绿色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 蓝色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 黑色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(255</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 255</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 255</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 白色 */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 混合出任意一种颜色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color:rgb(138</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 43</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 226</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 紫罗兰色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color:rgba(255</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 半透明的红色 */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 也可以使用百分比表示一种颜色（用的少） */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgb(100%</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0%</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: rgba(100%</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0%</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> 0%</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">50%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 半透明的红色 */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>小规律：</li></ul><blockquote><ol><li>若三种颜色值相同，呈现的是灰色，值越大，灰色越浅。</li><li>rgb(0, 0, 0) 是黑色， rgb(255, 255,255) 是白色。</li><li>对于 rbga 来说，前三位的 rgb 形式要保持一致，要么都是 0~255 的数字，要么都是百分比 。</li></ol></blockquote><h3 id="_4-2-3-表示方式三-hex-或-hexa" tabindex="-1"><a class="header-anchor" href="#_4-2-3-表示方式三-hex-或-hexa"><span>4.2.3 表示方式三：HEX 或 HEXA</span></a></h3>`,93)),s("ul",null,[s("li",null,[i[3]||(i[3]=s("code",null,"HEX",-1)),i[4]||(i[4]=l(" 的原理同与 ")),i[5]||(i[5]=s("code",null,"rgb",-1)),i[6]||(i[6]=l(" 一样，依然是通过：")),n(a,{color:"#ff0000"},{default:t(()=>i[0]||(i[0]=[l("红")])),_:1}),i[7]||(i[7]=l("、")),n(a,{color:"#00b050"},{default:t(()=>i[1]||(i[1]=[l("绿")])),_:1}),i[8]||(i[8]=l("、")),n(a,{color:"#0070c0"},{default:t(()=>i[2]||(i[2]=[l("蓝")])),_:1}),i[9]||(i[9]=l("色 进行组合，只不过要用 6位（分成3组） 来表达，"))]),i[10]||(i[10]=s("li",null,"格式为：# rrggbb",-1))]),i[14]||(i[14]=e(`<blockquote><p>每一位数字的取值范围是： <code>0 ~ f</code> ，即：<code>（ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e, f ）</code> 所以每一种光的最小值是： <code>00</code> ，最大值是： <code>ff</code></p></blockquote><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#ff0000;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 红色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#00ff00</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 绿色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#0000ff</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 蓝色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#000000</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 黑色 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#ffffff;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 白色 */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 如果每种颜色的两位都是相同的，就可以简写*/</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#ff9988;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 可简为：#f98 */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 但要注意前三位简写了，那么透明度就也要简写 */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">color: </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#ff998866;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 可简为：#f986 */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意点： IE 浏览器不支持 HEXA ，但支持 HEX 。</p></blockquote><h3 id="_4-2-4-表示方式四-hsl-或-hsla" tabindex="-1"><a class="header-anchor" href="#_4-2-4-表示方式四-hsl-或-hsla"><span>4.2.4 表示方式四：HSL 或 HSLA</span></a></h3><ul><li>HSL 是通过：色相、饱和度、亮度，来表示一个颜色的，格式为： hsl(色相,饱和度,亮度) <ul><li>色相：取值范围是 0~360 度，具体度数对应的颜色如下图：</li><li>饱和度：取值范围是 0%~100% 。（向色相中对应颜色中添加灰色， 0% 全灰， 100% 没有灰）</li><li>亮度：取值范围是 0%~100% 。（ 0% 亮度没了，所以就是黑色。 100% 亮度太强，所以就是白色了）</li><li>![[Pasted image 20240627220909.png|234]]</li></ul></li><li>HSLA 其实就是在 HSL 的基础上，添加了透明度。</li></ul><h2 id="_4-3-css字体属性" tabindex="-1"><a class="header-anchor" href="#_4-3-css字体属性"><span>4.3 CSS字体属性</span></a></h2><h3 id="_4-3-1-字体大小" tabindex="-1"><a class="header-anchor" href="#_4-3-1-字体大小"><span>4.3.1 字体大小</span></a></h3><ul><li><p>属性名： <code>font-size</code></p></li><li><p>作用：控制字体的大小。</p></li><li><p>语法：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-size: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注意点：</p><ol><li>Chrome 浏览器支持的最小文字为 <code>12px</code> ，默认的文字大小为 <code>16px</code> ，并且 <code>0px</code> 会自动消失。</li><li>不同浏览器默认的字体大小可能不一致，所以最好给一个明确的值，不要用默认大小。</li><li>通常以给 <code>body</code> 设置 <code>font-size</code> 属性，这样 <code>body</code> 中的其他元素就都可以继承了。</li></ol></li></ul><h3 id="_4-3-2-字体族" tabindex="-1"><a class="header-anchor" href="#_4-3-2-字体族"><span>4.3.2 字体族</span></a></h3><ul><li><p>属性名： font-family</p></li><li><p>作用：控制字体类型。</p></li><li><p>语法：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-family: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;STCaiyun&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Microsoft YaHei&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">sans-serif</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>注意：</p></li></ul><blockquote><ol><li>使用字体的英文名字兼容性会更好，具体的英文名可以自行查询，或在电脑的设置里去寻找。</li><li>如果字体名包含空格，必须使用引号包裹起来。</li><li>可以设置多个字体，按照从左到右的顺序逐个查找，找到就用，没有找到就使用后面的，且通常在最后写上 serif （衬线字体）或 sans-serif （非衬线字体）。</li><li>windows 系统中，默认的字体就是微软雅黑。</li></ol></blockquote><h3 id="_4-3-3-字体风格" tabindex="-1"><a class="header-anchor" href="#_4-3-3-字体风格"><span>4.3.3 字体风格</span></a></h3><ul><li>属性名： font-style</li><li>作用：控制字体是否为斜体。</li><li>常用值： <ol><li>normal ：正常（默认值）</li><li>italic ：斜体（使用字体自带的斜体效果）</li><li>oblique ：斜体（强制倾斜产生的斜体效果）</li></ol></li></ul><blockquote><p>实现斜体时，更推荐使用 italic 。</p></blockquote><ul><li>语法：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		font-style: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">italic</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-3-4-字体粗细" tabindex="-1"><a class="header-anchor" href="#_4-3-4-字体粗细"><span>4.3.4 字体粗细</span></a></h3><ul><li><p>属性名： font-weight</p></li><li><p>作用：控制字体的粗细。</p></li><li><p>常用值：</p><ul><li><p>关键词</p><ol><li>lighter ：细</li><li>normal ： 正常</li><li>bold ：粗</li><li>bolder ：很粗 （多数字体不支持）</li></ol></li><li><p>数值：</p><ol><li>100~1000 且无单位，数值越大，字体越粗 （或一样粗，具体得看字体设计时的精确程度）。</li><li>100~300 等同于 lighter ， 400~500 等同于 normal ， 600 及以上等同于 bold 。</li></ol></li></ul></li><li><p>语法：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-weight: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">bold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	font-weight: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-3-5-字体复合写法" tabindex="-1"><a class="header-anchor" href="#_4-3-5-字体复合写法"><span>4.3.5 字体复合写法</span></a></h3><ul><li>属性名： <code>font</code> ，可以把上述字体样式合并成一个属性。</li><li>作用：将上述所有字体相关的属性复合在一起编写。</li><li>编写规则： <ol><li>字体大小、字体族必须都写上。</li><li>字体族必须是最后一位、字体大小必须是倒数第二位。</li><li>各个属性间用空格隔开。</li></ol></li><li>实际开发中更推荐复合写法，但这也不是绝对的，比如只想设置字体大小，那就直接用 <code>font-size</code> 属性。</li></ul><h2 id="_4-4-css文本属性" tabindex="-1"><a class="header-anchor" href="#_4-4-css文本属性"><span>4.4 CSS文本属性</span></a></h2><h3 id="_4-4-1-文本颜色" tabindex="-1"><a class="header-anchor" href="#_4-4-1-文本颜色"><span>4.4.1 文本颜色</span></a></h3><p>属性名： color 作用：控制文字的颜色。 可选值：</p><ol><li>颜色名</li><li>rgb 或 rgba</li><li>HEX 或 HEXA （十六进制）</li><li>HSL 或 HSLA 开发中常用的是： rgb/rgba 或 HEX/HEXA （十六进制）。 举例：</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	color: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">rgb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">112</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">78</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-2-文本间距" tabindex="-1"><a class="header-anchor" href="#_4-4-2-文本间距"><span>4.4.2 文本间距</span></a></h3><ul><li>字母间距： <code>letter-spacing</code></li><li>单词间距： <code>word-spacing</code> （通过空格识别词）</li><li>属性值为像素（ px ），正值让间距增大，负值让间距缩小。</li></ul><h3 id="_4-4-3-文本修饰" tabindex="-1"><a class="header-anchor" href="#_4-4-3-文本修饰"><span>4.4.3 文本修饰</span></a></h3><ul><li><p>属性名： <code>text-decoration</code></p></li><li><p>作用：控制文本的各种装饰线。</p></li><li><p>可选值：</p><ol><li>none ： 无装饰线（常用）</li><li>underline ：下划线（常用）</li><li>overline ： 上划线</li><li>line-through ： 删除线</li></ol><ul><li>可搭配如下值使用： <ol><li>dotted ：虚线</li><li>wavy ：波浪线</li><li>也可以指定颜色</li></ol></li></ul></li><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	text-decoration: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-4-4-文本缩进" tabindex="-1"><a class="header-anchor" href="#_4-4-4-文本缩进"><span>4.4.4 文本缩进</span></a></h3><ul><li>属性名： <code>text-indent</code> 。</li><li>作用：控制文本首字母的缩进。</li><li>属性值： css 中的长度单位，例如： px</li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	text-indent:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-4-5-文本对齐-水平" tabindex="-1"><a class="header-anchor" href="#_4-4-5-文本对齐-水平"><span>4.4.5 文本对齐_水平</span></a></h3><ul><li>属性名： text-align 。</li><li>作用：控制文本的水平对齐方式。</li><li>常用值： <ol><li>left ：左对齐（默认值）</li><li>right ：右对齐</li><li>center ：居中对齐</li></ol></li><li>举例：<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	text-align: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_4-4-6-细说-font-size" tabindex="-1"><a class="header-anchor" href="#_4-4-6-细说-font-size"><span>4.4.6 细说 font-size</span></a></h3><ol><li>由于字体设计原因，文字最终呈现的大小，并不一定与 <code>font-size</code> 的值一致，可能大，也可能小。</li></ol><blockquote><p>例如： <code>font-size</code> 设为 <code>40px</code> ，最终呈现的文字，可能比 <code>40px</code> 大，也可能比 <code>40px</code> 小。</p></blockquote><ol start="2"><li>通常情况下，文字相对字体设计框，并不是垂直居中的，通常都靠下 一些。</li></ol><h3 id="_4-4-7-行高" tabindex="-1"><a class="header-anchor" href="#_4-4-7-行高"><span>4.4.7 行高</span></a></h3><ul><li>属性名： <code>line-height</code></li><li>作用：控制一行文字的高度。</li><li>可选值：</li></ul><blockquote><ol><li>normal ：由浏览器根据文字大小决定的一个默认值。</li><li>像素( px )。</li><li>数字：参考自身 font-size 的倍数（很常用）。</li><li>百分比：参考自身 font-size 的百分比。</li></ol></blockquote><ul><li><p>备注：由于字体设计原因，文字在一行中，并不是绝对垂直居中，若一行中都是文字，不会太影响观感。</p></li><li><p>举例：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	line-height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">60</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	line-height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	line-height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">150</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>行高注意事项：</p></li></ul><blockquote><ol><li>line-height 过小会怎样？—— 文字产生重叠，且最小值是 0 ，不能为负数。</li><li>line-height 是可以继承的，且为了能更好的呈现文字，最好写数值。</li><li>line-height 和 height 是什么关系？ <ol><li>设置了 height ，那么高度就是 height 的值。</li><li>不设置 height 的时候，会根据 line-height 计算高度。</li></ol></li></ol></blockquote><ul><li>应用场景： <ol><li>对于多行文字：控制行与行之间的距离。</li><li>对于单行文字：让 height 等于 line-height ，可以实现文字垂直居中。</li></ol></li></ul><blockquote><p>备注：由于字体设计原因，靠上述办法实现的居中，并不是绝对的垂直居中，但如果一行中都是文字，不会太影响观感。</p></blockquote><h3 id="_4-4-8-文本对齐-垂直" tabindex="-1"><a class="header-anchor" href="#_4-4-8-文本对齐-垂直"><span>4.4.8 文本对齐_垂直</span></a></h3><ul><li>顶部：无需任何属性，在垂直方向上，默认就是顶部对齐。</li><li>居中：对于单行文字，让 height = line-height 即可。</li></ul><blockquote><p>问题：多行文字垂直居中怎么办？—— 后面我们用定位去做。</p></blockquote><ul><li>底部：对于单行文字，目前一个临时的方式： 让 <code>line-height</code> = ( <code>height</code> × <code>2</code> ) - <code>font-size</code> - <code>x</code> 。 备注： <code>x</code> 是根据字体族，动态决定的一个值。</li></ul><blockquote><p>问题：垂直方向上的底部对齐，更好的解决办法是什么？—— 后面我们用定位去做。</p></blockquote><h3 id="_4-4-9-vertical-align" tabindex="-1"><a class="header-anchor" href="#_4-4-9-vertical-align"><span>4.4.9 vertical-align</span></a></h3><ul><li>属性名： vertical-align 。</li><li>作用：用于指定同一行元素之间，或 表格单元格 内文字的 垂直对齐方式。</li><li>常用值： <ol><li><code>baseline</code> （默认值）：使元素的基线与父元素的基线对齐。</li><li><code>top</code> ：使元素的顶部与其所在行的顶部对齐。</li><li><code>middle</code> ：使元素的中部与父元素的基线加上父元素字母 x 的一半对齐。</li><li><code>bottom</code> ：使元素的底部与其所在行的底部对齐。</li></ol></li></ul><blockquote><p>特别注意： vertical-align 不能控制块元素。</p></blockquote><h2 id="_4-5-css列表属性" tabindex="-1"><a class="header-anchor" href="#_4-5-css列表属性"><span>4.5 CSS列表属性</span></a></h2><p>列表相关的属性，可以作用在 <code>ul 、 ol 、 li</code> 元素上。 ![[Pasted image 20240627224952.png|550]]</p><h2 id="_4-6-css表格属性" tabindex="-1"><a class="header-anchor" href="#_4-6-css表格属性"><span>4.6 CSS表格属性</span></a></h2><ol><li>边框相关属性（其他元素也能用）： ![[Pasted image 20240627225029.png|575]]</li></ol><blockquote><p>注意：</p><ol><li>以上 4 个边框相关的属性，其他元素也可以用，这是我们第一次遇见它们。</li><li>在后面的盒子模型中，我们会详细讲解边框相关的知识。</li></ol></blockquote><ol start="2"><li>表格独有属性（只有 table 标签才能使用）： ![[Pasted image 20240627225247.png|625]]</li></ol><blockquote><p>以上 5 个属性，只有表格才能使用，即： <code>&lt;table&gt;</code> 标签。</p></blockquote><h2 id="_4-7-css背景属性" tabindex="-1"><a class="header-anchor" href="#_4-7-css背景属性"><span>4.7 CSS背景属性</span></a></h2><p>![[Pasted image 20240627225340.png|575]]</p><h2 id="_4-8-css鼠标属性" tabindex="-1"><a class="header-anchor" href="#_4-8-css鼠标属性"><span>4.8 CSS鼠标属性</span></a></h2><p>![[Pasted image 20240627225357.png|575]]</p><blockquote><p>扩展：自定义鼠标图标</p><p><code>/* 自定义鼠标光标 */</code><code>cursor: url(&quot;./arrow.png&quot;),pointer;</code></p></blockquote><h1 id="_5-css盒子模型" tabindex="-1"><a class="header-anchor" href="#_5-css盒子模型"><span>5 CSS盒子模型</span></a></h1><h2 id="_5-1-css-长度单位" tabindex="-1"><a class="header-anchor" href="#_5-1-css-长度单位"><span>5.1 CSS 长度单位</span></a></h2><ol><li><code>px</code> ：像素。</li><li><code>em</code> ：相对元素 <code>font-size</code> 的倍数。</li><li><code>rem</code> ：相对根字体大小，<code>html</code>标签就是根。</li><li><code>%</code> ：相对父元素计算。</li></ol><blockquote><p>注意： CSS 中设置长度，必须加单位，否则样式无效！</p></blockquote><h2 id="_5-2-元素的显示模式" tabindex="-1"><a class="header-anchor" href="#_5-2-元素的显示模式"><span>5.2 元素的显示模式</span></a></h2><ul><li><strong>块元素</strong>（block）</li></ul><blockquote><p>又称：块级元素 特点：</p><ol><li>在页面中独占一行，不会与任何元素共用一行，是从上到下排列的。</li><li>默认宽度：撑满父元素。</li><li>默认高度：由内容撑开。</li><li>可以通过 CSS 设置宽高。</li></ol></blockquote><ul><li><strong>行内元素</strong>（inline）</li></ul><blockquote><p>又称：内联元素 特点:</p><ol><li>在页面中不独占一行，一行中不能容纳下的行内元素，会在下一行继续从左到右排列。</li><li>默认宽度：由内容撑开。</li><li>默认高度：由内容撑开。</li><li>无法通过 CSS 设置宽高。</li></ol></blockquote><ul><li><strong>行内块元素</strong>（inline-block）</li></ul><blockquote><p>又称：内联块元素 特点：</p><ol><li>在页面中不独占一行，一行中不能容纳下的行内元素，会在下一行继续从左到右排列。</li><li>默认宽度：由内容撑开。</li><li>默认高度：由内容撑开。</li><li>可以通过 CSS 设置宽高。</li></ol></blockquote><blockquote><p><strong>注意</strong>：元素早期只分为：行内元素、块级元素，区分条件也只有一条：&quot;是否独占一行&quot;，如果按照这种 分类方式，行内块元素应该算作行内元素。</p></blockquote><h3 id="_5-2-1-总结各元素的显示模式" tabindex="-1"><a class="header-anchor" href="#_5-2-1-总结各元素的显示模式"><span>5.2.1 总结各元素的显示模式</span></a></h3><ul><li><strong>块元素</strong>（block）</li></ul><blockquote><ol><li>主体结构标签： <code>&lt;html&gt;</code> 、 <code>&lt;body&gt;</code></li><li>排版标签： <code>&lt;h1&gt; ~ &lt;h6&gt; 、 &lt;hr&gt; 、 &lt;p&gt; 、 &lt;pre&gt; 、 &lt;div&gt;</code></li><li>列表标签： <code>&lt;ul&gt; 、 &lt;ol&gt; 、 &lt;li&gt; 、 &lt;dl&gt; 、 &lt;dt&gt; 、 &lt;dd&gt;</code></li><li>表格相关标签： <code>&lt;table&gt; 、 &lt;tbody&gt; 、 &lt;thead&gt; 、 &lt;tfoot&gt; 、 &lt;tr&gt; 、&lt;caption&gt;</code></li><li><code>&lt;form&gt; 与 &lt;option&gt;</code></li></ol></blockquote><ul><li><strong>行内元素</strong>（inline）</li></ul><blockquote><ol><li>文本标签： <code>&lt;br&gt; 、 &lt;em&gt; 、 &lt;strong&gt; 、 &lt;sup&gt; 、 &lt;sub&gt; 、 &lt;del&gt; 、 &lt;ins&gt;</code></li><li><code>&lt;a&gt; 与 &lt;label&gt;</code>、<code>&lt;span&gt;</code></li></ol></blockquote><ul><li><strong>行内块元素</strong>（inline-block）</li></ul><blockquote><ol><li>图片： <code>&lt;img&gt;</code></li><li>单元格： <code>&lt;td&gt; 、 &lt;th&gt;</code></li><li>表单控件： <code>&lt;input&gt; 、 &lt;textarea&gt; 、 &lt;select&gt; 、 &lt;button&gt;</code></li><li>框架标签： <code>&lt;iframe&gt;</code></li></ol></blockquote><h3 id="_5-2-2-修改元素的显示模式" tabindex="-1"><a class="header-anchor" href="#_5-2-2-修改元素的显示模式"><span>5.2.2 修改元素的显示模式</span></a></h3><p>通过 CSS 中的 <code>display</code> 属性可以修改元素的默认显示模式，常用值如下： ![[Pasted image 20240627230434.png]]</p><h2 id="_5-3-盒子模型的组成" tabindex="-1"><a class="header-anchor" href="#_5-3-盒子模型的组成"><span>5.3 盒子模型的组成</span></a></h2><ul><li>CSS 会把所有的 HTML 元素都看成一个盒子，所有的样式也都是基于这个盒子。 <ol><li>margin（外边距）： 盒子与外界的距离。</li><li>border（边框）： 盒子的边框。</li><li>padding（内边距）： 紧贴内容的补白区域。</li><li>content（内容）：元素中的文本或后代元素都是它的内容。</li></ol></li><li>图示如下： ![[Pasted image 20240627230656.png|250]]</li><li>盒子的大小 = <code>content</code> + 左右 <code>padding</code> + 左右 <code>border</code> 。</li></ul><blockquote><p>注意：外边距 <code>margin</code> 不会影响盒子的大小，但会影响盒子的位置。</p></blockquote><h2 id="_5-4-盒子内容区-content" tabindex="-1"><a class="header-anchor" href="#_5-4-盒子内容区-content"><span>5.4 盒子内容区（content）</span></a></h2><p>![[Pasted image 20240627230951.png]]</p><blockquote><p>注意： <code>max-width 、 min-width</code> 一般不与 <code>width</code> 一起使用。 <code>max-height 、 min-height</code> 一般不与 <code>height</code> 一起使用。</p></blockquote><h2 id="_5-5-关于默认宽度" tabindex="-1"><a class="header-anchor" href="#_5-5-关于默认宽度"><span>5.5 关于默认宽度</span></a></h2><ul><li>所谓的默认宽度，就是不设置 width 属性时，元素所呈现出来的宽度。</li><li>总宽度 = 父的 <code>content</code> — 自身的左右 <code>margin</code> 。</li><li>内容区的宽度 = 父的 <code>content</code> — 自身的左右 <code>margin</code> — 自身的左右 <code>border</code> — 自身的左右 <code>padding</code> 。</li></ul><h2 id="_5-6-盒子内边距-padding" tabindex="-1"><a class="header-anchor" href="#_5-6-盒子内边距-padding"><span>5.6 盒子内边距（padding）</span></a></h2><p>![[Pasted image 20240627231116.png]]</p><ul><li><code>padding</code> 复合属性的使用规则： <ol><li><code>padding</code>: <code>10px</code>; 四个方向内边距都是 <code>10px</code> 。</li><li><code>padding</code>: <code>10px 20px</code>; 上 <code>10px</code> ，左右 <code>20px</code> 。（上下、左右）</li><li><code>padding</code>: <code>10px 20px 30px</code>; 上 <code>10px</code> ，左右 <code>20px</code> ，下 <code>30px</code> 。（上、左右、下）</li><li>padding: <code>10px 20px 30px 40px</code>; 上 <code>10px</code> ，右 <code>20px</code> ，下 <code>30px</code> ，左 <code>40px</code> 。（上、右、下、左）</li></ol></li></ul><blockquote><p>注意点：</p><ol><li><code>padding</code> 的值不能为负数。</li><li>行内元素的左右内边距是没问题的，上下内边距不能完美的设置。</li><li>块级元素、行内块元素，四个方向内边距都可以完美设置。</li></ol></blockquote><h2 id="_5-7-盒子边框-border" tabindex="-1"><a class="header-anchor" href="#_5-7-盒子边框-border"><span>5.7 盒子边框（border）</span></a></h2><p>![[Pasted image 20240627231725.png]]</p><blockquote><p>边框相关属性共 20 个。 <code>border-style 、 border-width 、 border-color</code> 其实也是复合属性。</p></blockquote><h2 id="_5-8-盒子外边距-margin" tabindex="-1"><a class="header-anchor" href="#_5-8-盒子外边距-margin"><span>5.8 盒子外边距_margin</span></a></h2><p>![[Pasted image 20240627231854.png]]</p><h3 id="_5-8-1-margin-注意事项" tabindex="-1"><a class="header-anchor" href="#_5-8-1-margin-注意事项"><span>5.8.1 margin 注意事项</span></a></h3><ol><li>子元素的 <code>margin</code> ,是参考父元素的 <code>content</code> 计算的。（因为是父亲的 <code>content</code> 中承装着子元素）</li><li>上 <code>margin</code> 、左 <code>margin</code> ：影响自己的位置；下 <code>margin</code> 、右 <code>margin</code> ：影响后面兄弟元素的位置。</li><li>块级元素、行内块元素，均可以完美地设置四个方向的 <code>margin</code> ；但行内元素，左右<code>margin</code> 可以完美设置，上下 <code>margin</code> 设置无效。</li><li><code>margin</code> 的值也可以是 <code>auto</code> ，如果给一个块级元素设置左右 <code>margin</code> 都为 <code>auto</code> ，该块级元素会在父元素中水平居中。</li><li><code>margin</code> 的值可以是负值。</li></ol><h3 id="_5-8-2-margin-塌陷问题" tabindex="-1"><a class="header-anchor" href="#_5-8-2-margin-塌陷问题"><span>5.8.2 margin 塌陷问题</span></a></h3><ol><li><p><strong>什么是 <code>margin</code> 塌陷？</strong></p><ul><li>第一个子元素的上 <code>margin</code> 会作用在父元素上，最后一个子元素的下 <code>margin</code> 会作用在父元素上。</li></ul></li><li><p><strong>如何解决 <code>margin</code> 塌陷？</strong></p><ul><li>方案一： 给父元素设置不为 <code>0</code> 的 <code>padding</code> 。</li><li>方案二： 给父元素设置宽度不为 <code>0</code> 的 <code>border</code> 。</li><li>方案三：给父元素设置 css 样式 <code>overflow:hidden</code></li></ul></li></ol><h3 id="_5-8-3-margin-合并问题" tabindex="-1"><a class="header-anchor" href="#_5-8-3-margin-合并问题"><span>5.8.3 <code>margin</code> 合并问题</span></a></h3><ol><li><strong>什么是 <code>margin</code> 合并？</strong><ul><li>上面兄弟元素的下外边距和下面兄弟元素的上外边距会合并，取一个最大的值，而不是相加。</li></ul></li><li><strong>如何解决 <code>margin</code> 塌陷？</strong><ul><li>无需解决，布局的时候上下的兄弟元素，只给一个设置上下外边距就可以了。</li></ul></li></ol><h2 id="_5-9-处理内容溢出" tabindex="-1"><a class="header-anchor" href="#_5-9-处理内容溢出"><span>5.9 处理内容溢出</span></a></h2><p>![[Pasted image 20240627232600.png]]</p><blockquote><p>注意：</p><ol><li><code>overflow-x</code> 、 <code>overflow-y</code> 不能一个是 <code>hidden</code> ，一个是 <code>visible</code> ，是实验性属性，不建议使用。</li><li><code>overflow</code> 常用的值是 <code>hidden</code> 和 <code>auto</code> ，除了能处理溢出的显示方式，还可以解决很多疑难杂症。</li></ol></blockquote><h2 id="_5-10-隐藏元素的方式" tabindex="-1"><a class="header-anchor" href="#_5-10-隐藏元素的方式"><span>5.10 隐藏元素的方式</span></a></h2><ol><li><strong>方式一：visibility 属性</strong><code>visibility</code> 属性默认值是 <code>show</code> ，如果设置为 <code>hidden</code> ，元素会隐藏。 元素看不见了，还占有原来的位置（元素的大小依然保持）。</li><li><strong>方式二： display 属性</strong> 设置 <code>display</code>:<code>none</code> ，就可以让元素隐藏。 彻底地隐藏，不但看不见，也不占用任何位置，没有大小宽高。</li></ol><h2 id="_5-11-样式的继承" tabindex="-1"><a class="header-anchor" href="#_5-11-样式的继承"><span>5.11 样式的继承</span></a></h2><p>有些样式会继承，元素如果本身设置了某个样式，就使用本身设置的样式；但如果本身没有设置某个样式，会从父元素开始一级一级继承（优先继承离得近的祖先元素）。 <strong>会继承的 css 属性</strong></p><ul><li>字体属性、文本属性（除了vertical-align）、文字颜色 等。</li></ul><p><strong>不会继承的 css 属性</strong></p><ul><li>边框、背景、内边距、外边距、宽高、溢出方式 等。</li></ul><blockquote><p>一个规律：能继承的属性，都是不影响布局的，简单说：都是和盒子模型没关系的。</p></blockquote><h2 id="_5-12-默认样式" tabindex="-1"><a class="header-anchor" href="#_5-12-默认样式"><span>5.12 默认样式</span></a></h2><p>元素一般都些默认的样式，例如：</p><ol><li><code>&lt;a&gt;</code> 元素：下划线、字体颜色、鼠标小手。</li><li><code>&lt;h1&gt; ~ &lt;h6&gt;</code> 元素： 文字加粗、文字大小、上下外边距。</li><li><code>&lt;p&gt;</code> 元素：上下外边距</li><li><code>&lt;ul&gt;</code> 、 <code>ol</code> 元素：左内边距</li><li><code>body</code> 元素： <code>8px</code> 外边距（4个方向）</li><li>......</li></ol><p>优先级：<strong>元素的默认样式 &gt; 继承的样式</strong>，所以如果要重置元素的默认样式，选择器一定要直接选择器到该元素。</p><h2 id="_5-13-布局小技巧" tabindex="-1"><a class="header-anchor" href="#_5-13-布局小技巧"><span>5.13 布局小技巧</span></a></h2><ol><li>行内元素、行内块元素，可以被父元素当做文本处理。</li></ol><blockquote><p>即：可以像处理文本对齐一样，去处理：行内、行内块在父元素中的对齐。 例如： <code>text-align 、 line-height 、 text-indent</code> 等。</p></blockquote><ol start="2"><li>如何让子元素，在父亲中水平居中：</li></ol><blockquote><p>若子元素为块元素，给父元素加上： <code>margin:0 auto</code>; 。 若子元素为行内元素、行内块元素，给父元素加上： <code>text-align:center </code>。</p></blockquote><ol start="3"><li>如何让子元素，在父亲中垂直居中： <ul><li>若子元素为块元素，给子元素加上： <code>margin-top</code> ，值为：(父元素 <code>content</code> －子元素盒子总高) / 2。</li><li>若子元素为行内元素、行内块元素： <ul><li>让父元素的 <code>height</code> = <code>line-height</code> ，每个子元素都加上： <code>vertical-align:middle</code>; 。</li><li>补充：若想绝对垂直居中，父元素 font-size 设置为 0 。</li></ul></li></ul></li></ol><h2 id="_5-14-元素之间的空白问题" tabindex="-1"><a class="header-anchor" href="#_5-14-元素之间的空白问题"><span>5.14 元素之间的空白问题</span></a></h2><ul><li>产生的原因： <ul><li>行内元素、行内块元素，彼此之间的换行会被浏览器解析为一个空白字符。</li></ul></li><li>解决方案： <ol><li>方案一： 去掉换行和空格（不推荐）。</li><li>方案二： 给父元素设置 <code>font-size:0</code> ，再给需要显示文字的元素，单独设置字体大小（推荐）。</li></ol></li></ul><h2 id="_5-15-行内块的幽灵空白问题" tabindex="-1"><a class="header-anchor" href="#_5-15-行内块的幽灵空白问题"><span>5.15 行内块的幽灵空白问题</span></a></h2><ol><li>产生原因： <ul><li>行内块元素与文本的基线对齐，而文本的基线与文本最底端之间是有一定距离的。</li></ul></li><li>解决方案： <ul><li>方案一： 给行行内块设置 <code>vertical</code> ，值不为 <code>baseline</code> 即可，设置为 <code>middel</code> 、 <code>bottom</code> 、<code>top</code> 均可。</li><li>方案二： 若父元素中只有一张图片，设置图片为 <code>display</code>:<code>block</code> 。</li><li>方案三： 给父元素设置 <code>font-size: 0</code> 。如果该行内块内部还有文本，则需单独设置 <code>font-size</code> 。</li></ul></li></ol><h1 id="_6-浮动" tabindex="-1"><a class="header-anchor" href="#_6-浮动"><span>6 浮动</span></a></h1><h2 id="_6-1-浮动的简介" tabindex="-1"><a class="header-anchor" href="#_6-1-浮动的简介"><span>6.1 浮动的简介</span></a></h2><p>在最初，浮动是用来实现文字环绕图片效果的，现在浮动是主流的页面布局方式之一。 ![[Pasted image 20240627234138.png]]</p><h2 id="_6-2-元素浮动后的特点" tabindex="-1"><a class="header-anchor" href="#_6-2-元素浮动后的特点"><span>6.2 元素浮动后的特点</span></a></h2><ol><li>🤢脱离文档流。</li><li>😊不管浮动前是什么元素，浮动后：默认宽与高都是被内容撑开（尽可能小），而且可以设置宽高。</li><li>😊不会独占一行，可以与其他元素共用一行。</li><li>😊不会 <code>margin</code> 合并，也不会 <code>margin</code> 塌陷，能够完美的设置四个方向的 <code>margin</code> 和 <code>padding</code> 。</li><li>😊不会像行内块一样被当做文本处理（没有行内块的空白问题）。</li></ol><h2 id="_6-3-解决浮动产生的影响" tabindex="-1"><a class="header-anchor" href="#_6-3-解决浮动产生的影响"><span>6.3 解决浮动产生的影响</span></a></h2><h3 id="_6-3-1-元素浮动后会有哪些影响" tabindex="-1"><a class="header-anchor" href="#_6-3-1-元素浮动后会有哪些影响"><span>6.3.1 元素浮动后会有哪些影响</span></a></h3><ul><li><strong>对兄弟元素的影响</strong>： 后面的兄弟元素，会占据浮动元素之前的位置，在浮动元素的下面；对前面的兄弟无影响。</li><li><strong>对父元素的影响</strong>： 不能撑起父元素的高度，导致父元素高度塌陷；但父元素的宽度依然束缚浮动的元素。</li></ul><h3 id="_6-3-2-解决浮动产生的影响-清除浮动" tabindex="-1"><a class="header-anchor" href="#_6-3-2-解决浮动产生的影响-清除浮动"><span>6.3.2 解决浮动产生的影响（清除浮动）</span></a></h3><p>解决方案：</p><ol><li>方案一： 给父元素指定高度。</li><li>方案二： 给父元素也设置浮动，带来其他影响。</li><li>方案三： 给父元素设置 overflow:hidden 。</li><li>方案四： 在所有浮动元素的最后面，添加一个块级元素，并给该块级元素设置 clear:both 。</li><li>方案五： 给浮动元素的父元素，设置伪元素，通过伪元素清除浮动，原理与方案四相同。===&gt; 推荐使用</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.parent</span><span style="--shiki-light:#986801;--shiki-dark:#56B6C2;">::after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	content: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	display: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">block</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	clear:</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">both</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>布局中的一个原则：设置浮动的时候，兄弟元素要么全都浮动，要么全都不浮动。</p></blockquote><h2 id="_6-4-浮动相关属性" tabindex="-1"><a class="header-anchor" href="#_6-4-浮动相关属性"><span>6.4 浮动相关属性</span></a></h2><p>![[Pasted image 20240627234424.png|550]]</p><h1 id="_7-定位" tabindex="-1"><a class="header-anchor" href="#_7-定位"><span>7 定位</span></a></h1><h2 id="_7-1-相对定位" tabindex="-1"><a class="header-anchor" href="#_7-1-相对定位"><span>7.1 相对定位</span></a></h2><h3 id="_7-1-1-如何设置相对定位" tabindex="-1"><a class="header-anchor" href="#_7-1-1-如何设置相对定位"><span>7.1.1 如何设置相对定位？</span></a></h3><ul><li>给元素设置 <code>position</code>:<code>relative</code> 即可实现相对定位。</li><li>可以使用 <code>left</code> 、 <code>right</code> 、 <code>top</code> 、 <code>bottom</code> 四个属性调整位置。</li></ul><h3 id="_7-1-2-相对定位的参考点在哪里" tabindex="-1"><a class="header-anchor" href="#_7-1-2-相对定位的参考点在哪里"><span>7.1.2 相对定位的参考点在哪里？</span></a></h3><ul><li>相对自己原来的位置</li></ul><h3 id="_7-1-3-相对定位的特点" tabindex="-1"><a class="header-anchor" href="#_7-1-3-相对定位的特点"><span>7.1.3 相对定位的特点：</span></a></h3><ol><li>不会脱离文档流，元素位置的变化，只是视觉效果上的变化，不会对其他元素产生任何影响。</li><li>定位元素的显示层级比普通元素高，无论什么定位，显示层级都是一样的。 默认规则是： <ul><li>定位的元素会盖在普通元素之上。</li><li>都发生定位的两个元素，后写的元素会盖在先写的元素之上。</li></ul></li><li><code>left</code> 不能和 <code>right</code> 一起设置， <code>top</code> 和 <code>bottom</code> 不能一起设置。</li><li>相对定位的元素，也能继续浮动，但不推荐这样做。</li><li>相对行为的元素，也能通过 <code>margin</code> 调整位置，但不推荐这样做。</li></ol><blockquote><p>注意：绝大多数情况下，相对定位，会与绝对定位配合使用。</p></blockquote><h2 id="_7-2-绝对定位" tabindex="-1"><a class="header-anchor" href="#_7-2-绝对定位"><span>7.2 绝对定位</span></a></h2><h3 id="_7-2-1-如何设置绝对定位" tabindex="-1"><a class="header-anchor" href="#_7-2-1-如何设置绝对定位"><span>7.2.1 如何设置绝对定位？</span></a></h3><ul><li>给元素设置 <code>position</code>: <code>absolute</code> 即可实现绝对定位。</li><li>可以使用 <code>left</code> 、 <code>right</code> 、 <code>top</code> 、 <code>bottom</code> 四个属性调整位置。</li></ul><h3 id="_7-2-2-绝对定位的参考点在哪里" tabindex="-1"><a class="header-anchor" href="#_7-2-2-绝对定位的参考点在哪里"><span>7.2.2 绝对定位的参考点在哪里？</span></a></h3><ul><li><p>参考它的<strong>包含块</strong>。</p></li><li><p>什么是包含块？</p><ol><li>对于没有脱离文档流的元素：包含块就是父元素；</li><li>对于脱离文档流的元素：包含块是第一个拥有定位属性的祖先元素（如果所有祖先都没定位，那包含块就是整个页面）。</li></ol></li></ul><h3 id="_7-2-3-绝对定位元素的特点" tabindex="-1"><a class="header-anchor" href="#_7-2-3-绝对定位元素的特点"><span>7.2.3 绝对定位元素的特点：</span></a></h3><ol><li>脱离文档流，会对后面的兄弟元素、父元素有影响。</li><li><code>left</code> 不能和 <code>right</code> 一起设置， <code>top</code> 和 <code>bottom</code> 不能一起设置。</li><li>绝对定位、浮动不能同时设置，如果同时设置，浮动失效，以定位为主。</li><li>绝对定位的元素，也能通过 <code>margin</code> 调整位置，但不推荐这样做。</li><li>无论是什么元素（行内、行内块、块级）设置为绝对定位之后，都变成了<code>定位元素</code>。</li></ol><blockquote><p><strong>何为定位元素</strong>？ —— 默认宽、高都被内容所撑开，且能自由设置宽高。</p></blockquote><h2 id="_7-3-固定定位" tabindex="-1"><a class="header-anchor" href="#_7-3-固定定位"><span>7.3 固定定位</span></a></h2><h3 id="_7-3-1-如何设置为固定定位" tabindex="-1"><a class="header-anchor" href="#_7-3-1-如何设置为固定定位"><span>7.3.1 如何设置为固定定位？</span></a></h3><ul><li>给元素设置 <code>position</code>: <code>fixed</code> 即可实现固定定位。</li><li>可以使用 <code>left</code> 、 <code>right</code> 、 <code>top</code> 、 <code>bottom</code> 四个属性调整位置。</li></ul><h3 id="_7-3-2-固定定位的参考点在哪里" tabindex="-1"><a class="header-anchor" href="#_7-3-2-固定定位的参考点在哪里"><span>7.3.2 固定定位的参考点在哪里？</span></a></h3><p>参考它的<strong>视口</strong></p><blockquote><p>什么是视口？—— 对于 PC 浏览器来说，视口就是我们看网页的那扇“窗户”。</p></blockquote><h3 id="_7-3-3-固定定位元素的特点" tabindex="-1"><a class="header-anchor" href="#_7-3-3-固定定位元素的特点"><span>7.3.3 固定定位元素的特点</span></a></h3><ol><li>脱离文档流，会对后面的兄弟元素、父元素有影响。</li><li>left 不能和 <code>right</code> 一起设置， <code>top</code> 和 <code>bottom</code> 不能一起设置。</li><li>固定定位和浮动不能同时设置，如果同时设置，浮动失效，以固定定位为主。</li><li>固定定位的元素，也能通过 <code>margin</code> 调整位置，但不推荐这样做。</li><li>无论是什么元素（行内、行内块、块级）设置为固定定位之后，都变成了<code>定位元素</code>。</li></ol><h2 id="_7-4-粘性定位" tabindex="-1"><a class="header-anchor" href="#_7-4-粘性定位"><span>7.4 粘性定位</span></a></h2><h3 id="_7-4-1-如何设置为粘性定位" tabindex="-1"><a class="header-anchor" href="#_7-4-1-如何设置为粘性定位"><span>7.4.1 如何设置为粘性定位？</span></a></h3><ul><li>给元素设置 <code>position</code>:<code>sticky</code> 即可实现粘性定位。</li><li>可以使用 <code>left</code> 、 <code>right</code> 、 <code>top</code> 、 <code>bottom</code> 四个属性调整位置，不过最常用的是 top 值。</li></ul><h3 id="_7-4-2-粘性定位的参考点在哪里" tabindex="-1"><a class="header-anchor" href="#_7-4-2-粘性定位的参考点在哪里"><span>7.4.2 粘性定位的参考点在哪里？</span></a></h3><ul><li>离它最近的一个拥有“滚动机制”的祖先元素，即便这个祖先不是最近的真实可滚动祖先。</li></ul><h3 id="_7-4-3-粘性定位元素的特点" tabindex="-1"><a class="header-anchor" href="#_7-4-3-粘性定位元素的特点"><span>7.4.3 粘性定位元素的特点</span></a></h3><ul><li>不会脱离文档流，它是一种专门用于窗口滚动时的新的定位方式。</li><li>最常用的值是 <code>top</code> 值。</li><li>粘性定位和浮动可以同时设置，但不推荐这样做。</li><li>粘性定位的元素，也能通过 <code>margin</code> 调整位置，但不推荐这样做。</li><li>粘性定位和相对定位的特点基本一致，不同的是：粘性定位可以在元素到达某个位置时将其固定。</li></ul><h2 id="_7-5-定位层级" tabindex="-1"><a class="header-anchor" href="#_7-5-定位层级"><span>7.5 定位层级</span></a></h2><ol><li>定位元素的显示层级比普通元素高，无论什么定位，显示层级都是一样的。</li><li>如果位置发生重叠，默认情况是：后面的元素，会显示在前面元素之上。</li><li>可以通过 css 属性 <code>z-index</code> 调整元素的显示层级。</li><li>z-index 的属性值是数字，没有单位，值越大显示层级越高。</li><li>只有定位的元素设置 <code>z-index</code> 才有效。</li><li>如果 <code>z-index</code> 值大的元素，依然没有覆盖掉 <code>z-index</code> 值小的元素，那么请检查其包含块的层级。</li></ol><h2 id="_7-6-定位的特殊应用" tabindex="-1"><a class="header-anchor" href="#_7-6-定位的特殊应用"><span>7.6 定位的特殊应用</span></a></h2><blockquote><p>注意：</p><ol><li>发生固定定位、绝对定位后，元素都变成了定位元素，默认宽高被内容撑开，且依然可以设置宽高。</li><li>发生相对定位后，元素依然是之前的显示模式。</li><li>以下所说的特殊应用，只针对<strong>绝对定位</strong>和<strong>固定定位</strong> 的元素，不包括相对定位的元素。</li></ol></blockquote><p><strong>让定位元素的宽充满包含块</strong></p><ol><li>块宽想与包含块一致，可以给定位元素同时设置 <code>left</code> 和 <code>right</code> 为 0 。</li><li>高度想与包含块一致， <code>top</code> 和 <code>bottom</code> 设置为 0 。</li></ol><p><strong>让定位元素在包含块中居中</strong> 方案一：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">left:0;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">right:0;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">top:0;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">bottom:0;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">margin:auto;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方案二：</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">left: 50%;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">top: 50%;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-left</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: 负的宽度一半;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">margin-top</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: 负的高度一半;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：该定位的元素必须设置<strong>宽高</strong>！！！</p></blockquote><h1 id="_8-布局" tabindex="-1"><a class="header-anchor" href="#_8-布局"><span>8 布局</span></a></h1><h2 id="_8-1-版心" tabindex="-1"><a class="header-anchor" href="#_8-1-版心"><span>8.1 版心</span></a></h2><ul><li>在 PC 端网页中，一般都会有一个固定宽度且水平居中的盒子，来显示网页的主要内容，这是网页的版心。</li><li>版心的宽度一般是 <code>960 ~ 1200</code> 像素之间。</li><li>版心可以是一个，也可以是多个。 ![[Pasted image 20240628000249.png]]</li></ul><h2 id="_8-2-常用布局名词" tabindex="-1"><a class="header-anchor" href="#_8-2-常用布局名词"><span>8.2 常用布局名词</span></a></h2><p>![[Pasted image 20240628000312.png]]</p><h2 id="_8-3-重置默认样式" tabindex="-1"><a class="header-anchor" href="#_8-3-重置默认样式"><span>8.3 重置默认样式</span></a></h2><p>很多元素都有默认样式，比如：</p><ol><li><code>p</code> 元素有默认的上下 <code>margin</code> 。</li><li><code>h1~h6</code> 标题也有上下 <code>margin</code> ，且字体加粗。</li><li><code>body</code> 元素有默认的 <code>8px</code> 外边距。</li><li>超链接有默认的文字颜色和下划线。</li><li><code>ul</code> 元素有默认的左 <code>pading</code> 。</li><li>.......</li></ol><blockquote><p>在早期，元素默认样式，能够让我们快速的绘制网页，但如今网页的设计越来越复杂，内容越来越多，而且很精细，这些默认样式会给我们绘制页面带来麻烦；而且这些默认样式，在不同的浏览器 上呈现出来的效果也不一样，所以我们需要重置这些默认样式。</p></blockquote><p><strong>方案一：使用全局选择器</strong></p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	margin: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	padding: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">......	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此种方法，在简单案例中可以用一下，但实际开发中不会使用，因为 * 选择的是所有元素，而并不是所有的元素都有默认样式；而且我们重置时，有时候是需要做特定处理的，比如：想让 a 元素的文字是灰色，其他元素文字是蓝色。</p></blockquote><p><strong>方案二：reset.css</strong></p><ul><li>选择到具有默认样式的元素，清空其默认的样式。</li></ul><blockquote><p>经过 <code>reset</code> 后的网页，好似“一张白纸”，开发人员可根据设计稿，精细的去添加具体的样式。</p></blockquote><p><strong>方案三：Normalize.css</strong></p><ul><li><p><code>Normalize.css</code> 是一种最新方案，它在清除默认样式的基础上，保留了一些有价值的默认样式。</p></li><li><p>官网地址：http://necolas.github.io/normalize.css/</p></li><li><p>相对于 reset.css ， Normalize.css 有如下优点：</p><ol><li>保护了有价值的默认样式，而不是完全去掉它们。</li><li>为大部分HTML元素提供一般化的样式。</li><li>新增对 HTML5 元素的设置。</li><li>对并集选择器的使用比较谨慎，有效避免调试工具杂乱。</li></ol></li></ul><blockquote><p>备注： Normalize.css 的重置，和 reset.css 相比，更加的温和，开发时可根据实际情况进行选择。</p></blockquote>`,208))])}const u=h(r,[["render",c],["__file","CSS2基础.html.vue"]]),A=JSON.parse('{"path":"/study/coding/CSS/CSS2%E5%9F%BA%E7%A1%80.html","title":"《CSS2 基础》","lang":"zh-CN","frontmatter":{"number headings":"auto, first-level 1, max 6, 1.1","title":"《CSS2 基础》","category":["前端","CSS"],"tag":["CSS","CSS2","CSS基础","让我们变得更强大"],"date":"2024-06-27 17:49","article":false,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1.1 CSS简介","slug":"_1-1-css简介","link":"#_1-1-css简介","children":[]},{"level":2,"title":"1.2 CSS的编写位置","slug":"_1-2-css的编写位置","link":"#_1-2-css的编写位置","children":[{"level":3,"title":"1.2.1 行内样式","slug":"_1-2-1-行内样式","link":"#_1-2-1-行内样式","children":[]},{"level":3,"title":"1.2.2 内部样式","slug":"_1-2-2-内部样式","link":"#_1-2-2-内部样式","children":[]},{"level":3,"title":"1.2.3 外部样式","slug":"_1-2-3-外部样式","link":"#_1-2-3-外部样式","children":[]}]},{"level":2,"title":"1.3 样式表的优先级","slug":"_1-3-样式表的优先级","link":"#_1-3-样式表的优先级","children":[]},{"level":2,"title":"1.4 CSS语法规范","slug":"_1-4-css语法规范","link":"#_1-4-css语法规范","children":[]},{"level":2,"title":"1.5 CSS代码风格","slug":"_1-5-css代码风格","link":"#_1-5-css代码风格","children":[]},{"level":2,"title":"2.1 CSS基本选择器","slug":"_2-1-css基本选择器","link":"#_2-1-css基本选择器","children":[{"level":3,"title":"2.1.1 通配选择器","slug":"_2-1-1-通配选择器","link":"#_2-1-1-通配选择器","children":[]},{"level":3,"title":"2.1.2 元素选择器","slug":"_2-1-2-元素选择器","link":"#_2-1-2-元素选择器","children":[]},{"level":3,"title":"2.1.3 类选择器","slug":"_2-1-3-类选择器","link":"#_2-1-3-类选择器","children":[]},{"level":3,"title":"2.1.4 ID选择器","slug":"_2-1-4-id选择器","link":"#_2-1-4-id选择器","children":[]},{"level":3,"title":"2.1.5 基本选择器总结","slug":"_2-1-5-基本选择器总结","link":"#_2-1-5-基本选择器总结","children":[]}]},{"level":2,"title":"2.2 CSS复合选择器","slug":"_2-2-css复合选择器","link":"#_2-2-css复合选择器","children":[{"level":3,"title":"2.2.1 交集选择器","slug":"_2-2-1-交集选择器","link":"#_2-2-1-交集选择器","children":[]},{"level":3,"title":"2.2.2 并集选择器","slug":"_2-2-2-并集选择器","link":"#_2-2-2-并集选择器","children":[]},{"level":3,"title":"2.2.3 HTML元素间的关系","slug":"_2-2-3-html元素间的关系","link":"#_2-2-3-html元素间的关系","children":[]},{"level":3,"title":"2.2.4 后代选择器","slug":"_2-2-4-后代选择器","link":"#_2-2-4-后代选择器","children":[]},{"level":3,"title":"2.2.5 子代选择器","slug":"_2-2-5-子代选择器","link":"#_2-2-5-子代选择器","children":[]},{"level":3,"title":"2.2.6 兄弟选择器","slug":"_2-2-6-兄弟选择器","link":"#_2-2-6-兄弟选择器","children":[]},{"level":3,"title":"2.2.7 属性选择器","slug":"_2-2-7-属性选择器","link":"#_2-2-7-属性选择器","children":[]},{"level":3,"title":"2.2.8 伪类选择器","slug":"_2-2-8-伪类选择器","link":"#_2-2-8-伪类选择器","children":[]},{"level":3,"title":"2.2.9 伪元素选择器","slug":"_2-2-9-伪元素选择器","link":"#_2-2-9-伪元素选择器","children":[]}]},{"level":2,"title":"2.3 选择器的优先级（权重）","slug":"_2-3-选择器的优先级-权重","link":"#_2-3-选择器的优先级-权重","children":[]},{"level":2,"title":"3.1 层叠性","slug":"_3-1-层叠性","link":"#_3-1-层叠性","children":[]},{"level":2,"title":"3.2 继承性","slug":"_3-2-继承性","link":"#_3-2-继承性","children":[]},{"level":2,"title":"3.3 优先级","slug":"_3-3-优先级","link":"#_3-3-优先级","children":[]},{"level":2,"title":"4.1 像素的概念","slug":"_4-1-像素的概念","link":"#_4-1-像素的概念","children":[]},{"level":2,"title":"4.2 颜色的表示","slug":"_4-2-颜色的表示","link":"#_4-2-颜色的表示","children":[{"level":3,"title":"4.2.1 表示方式一：颜色名","slug":"_4-2-1-表示方式一-颜色名","link":"#_4-2-1-表示方式一-颜色名","children":[]},{"level":3,"title":"4.2.2 表示方式二：rgb 或 rgba","slug":"_4-2-2-表示方式二-rgb-或-rgba","link":"#_4-2-2-表示方式二-rgb-或-rgba","children":[]},{"level":3,"title":"4.2.3 表示方式三：HEX 或 HEXA","slug":"_4-2-3-表示方式三-hex-或-hexa","link":"#_4-2-3-表示方式三-hex-或-hexa","children":[]},{"level":3,"title":"4.2.4 表示方式四：HSL 或 HSLA","slug":"_4-2-4-表示方式四-hsl-或-hsla","link":"#_4-2-4-表示方式四-hsl-或-hsla","children":[]}]},{"level":2,"title":"4.3 CSS字体属性","slug":"_4-3-css字体属性","link":"#_4-3-css字体属性","children":[{"level":3,"title":"4.3.1 字体大小","slug":"_4-3-1-字体大小","link":"#_4-3-1-字体大小","children":[]},{"level":3,"title":"4.3.2 字体族","slug":"_4-3-2-字体族","link":"#_4-3-2-字体族","children":[]},{"level":3,"title":"4.3.3 字体风格","slug":"_4-3-3-字体风格","link":"#_4-3-3-字体风格","children":[]},{"level":3,"title":"4.3.4 字体粗细","slug":"_4-3-4-字体粗细","link":"#_4-3-4-字体粗细","children":[]},{"level":3,"title":"4.3.5 字体复合写法","slug":"_4-3-5-字体复合写法","link":"#_4-3-5-字体复合写法","children":[]}]},{"level":2,"title":"4.4 CSS文本属性","slug":"_4-4-css文本属性","link":"#_4-4-css文本属性","children":[{"level":3,"title":"4.4.1 文本颜色","slug":"_4-4-1-文本颜色","link":"#_4-4-1-文本颜色","children":[]},{"level":3,"title":"4.4.2 文本间距","slug":"_4-4-2-文本间距","link":"#_4-4-2-文本间距","children":[]},{"level":3,"title":"4.4.3 文本修饰","slug":"_4-4-3-文本修饰","link":"#_4-4-3-文本修饰","children":[]},{"level":3,"title":"4.4.4 文本缩进","slug":"_4-4-4-文本缩进","link":"#_4-4-4-文本缩进","children":[]},{"level":3,"title":"4.4.5 文本对齐_水平","slug":"_4-4-5-文本对齐-水平","link":"#_4-4-5-文本对齐-水平","children":[]},{"level":3,"title":"4.4.6 细说 font-size","slug":"_4-4-6-细说-font-size","link":"#_4-4-6-细说-font-size","children":[]},{"level":3,"title":"4.4.7 行高","slug":"_4-4-7-行高","link":"#_4-4-7-行高","children":[]},{"level":3,"title":"4.4.8 文本对齐_垂直","slug":"_4-4-8-文本对齐-垂直","link":"#_4-4-8-文本对齐-垂直","children":[]},{"level":3,"title":"4.4.9 vertical-align","slug":"_4-4-9-vertical-align","link":"#_4-4-9-vertical-align","children":[]}]},{"level":2,"title":"4.5 CSS列表属性","slug":"_4-5-css列表属性","link":"#_4-5-css列表属性","children":[]},{"level":2,"title":"4.6 CSS表格属性","slug":"_4-6-css表格属性","link":"#_4-6-css表格属性","children":[]},{"level":2,"title":"4.7 CSS背景属性","slug":"_4-7-css背景属性","link":"#_4-7-css背景属性","children":[]},{"level":2,"title":"4.8 CSS鼠标属性","slug":"_4-8-css鼠标属性","link":"#_4-8-css鼠标属性","children":[]},{"level":2,"title":"5.1 CSS 长度单位","slug":"_5-1-css-长度单位","link":"#_5-1-css-长度单位","children":[]},{"level":2,"title":"5.2 元素的显示模式","slug":"_5-2-元素的显示模式","link":"#_5-2-元素的显示模式","children":[{"level":3,"title":"5.2.1 总结各元素的显示模式","slug":"_5-2-1-总结各元素的显示模式","link":"#_5-2-1-总结各元素的显示模式","children":[]},{"level":3,"title":"5.2.2 修改元素的显示模式","slug":"_5-2-2-修改元素的显示模式","link":"#_5-2-2-修改元素的显示模式","children":[]}]},{"level":2,"title":"5.3 盒子模型的组成","slug":"_5-3-盒子模型的组成","link":"#_5-3-盒子模型的组成","children":[]},{"level":2,"title":"5.4 盒子内容区（content）","slug":"_5-4-盒子内容区-content","link":"#_5-4-盒子内容区-content","children":[]},{"level":2,"title":"5.5 关于默认宽度","slug":"_5-5-关于默认宽度","link":"#_5-5-关于默认宽度","children":[]},{"level":2,"title":"5.6 盒子内边距（padding）","slug":"_5-6-盒子内边距-padding","link":"#_5-6-盒子内边距-padding","children":[]},{"level":2,"title":"5.7 盒子边框（border）","slug":"_5-7-盒子边框-border","link":"#_5-7-盒子边框-border","children":[]},{"level":2,"title":"5.8 盒子外边距_margin","slug":"_5-8-盒子外边距-margin","link":"#_5-8-盒子外边距-margin","children":[{"level":3,"title":"5.8.1 margin 注意事项","slug":"_5-8-1-margin-注意事项","link":"#_5-8-1-margin-注意事项","children":[]},{"level":3,"title":"5.8.2 margin 塌陷问题","slug":"_5-8-2-margin-塌陷问题","link":"#_5-8-2-margin-塌陷问题","children":[]},{"level":3,"title":"5.8.3 margin 合并问题","slug":"_5-8-3-margin-合并问题","link":"#_5-8-3-margin-合并问题","children":[]}]},{"level":2,"title":"5.9 处理内容溢出","slug":"_5-9-处理内容溢出","link":"#_5-9-处理内容溢出","children":[]},{"level":2,"title":"5.10 隐藏元素的方式","slug":"_5-10-隐藏元素的方式","link":"#_5-10-隐藏元素的方式","children":[]},{"level":2,"title":"5.11 样式的继承","slug":"_5-11-样式的继承","link":"#_5-11-样式的继承","children":[]},{"level":2,"title":"5.12 默认样式","slug":"_5-12-默认样式","link":"#_5-12-默认样式","children":[]},{"level":2,"title":"5.13 布局小技巧","slug":"_5-13-布局小技巧","link":"#_5-13-布局小技巧","children":[]},{"level":2,"title":"5.14 元素之间的空白问题","slug":"_5-14-元素之间的空白问题","link":"#_5-14-元素之间的空白问题","children":[]},{"level":2,"title":"5.15 行内块的幽灵空白问题","slug":"_5-15-行内块的幽灵空白问题","link":"#_5-15-行内块的幽灵空白问题","children":[]},{"level":2,"title":"6.1 浮动的简介","slug":"_6-1-浮动的简介","link":"#_6-1-浮动的简介","children":[]},{"level":2,"title":"6.2 元素浮动后的特点","slug":"_6-2-元素浮动后的特点","link":"#_6-2-元素浮动后的特点","children":[]},{"level":2,"title":"6.3 解决浮动产生的影响","slug":"_6-3-解决浮动产生的影响","link":"#_6-3-解决浮动产生的影响","children":[{"level":3,"title":"6.3.1 元素浮动后会有哪些影响","slug":"_6-3-1-元素浮动后会有哪些影响","link":"#_6-3-1-元素浮动后会有哪些影响","children":[]},{"level":3,"title":"6.3.2 解决浮动产生的影响（清除浮动）","slug":"_6-3-2-解决浮动产生的影响-清除浮动","link":"#_6-3-2-解决浮动产生的影响-清除浮动","children":[]}]},{"level":2,"title":"6.4 浮动相关属性","slug":"_6-4-浮动相关属性","link":"#_6-4-浮动相关属性","children":[]},{"level":2,"title":"7.1 相对定位","slug":"_7-1-相对定位","link":"#_7-1-相对定位","children":[{"level":3,"title":"7.1.1 如何设置相对定位？","slug":"_7-1-1-如何设置相对定位","link":"#_7-1-1-如何设置相对定位","children":[]},{"level":3,"title":"7.1.2 相对定位的参考点在哪里？","slug":"_7-1-2-相对定位的参考点在哪里","link":"#_7-1-2-相对定位的参考点在哪里","children":[]},{"level":3,"title":"7.1.3 相对定位的特点：","slug":"_7-1-3-相对定位的特点","link":"#_7-1-3-相对定位的特点","children":[]}]},{"level":2,"title":"7.2 绝对定位","slug":"_7-2-绝对定位","link":"#_7-2-绝对定位","children":[{"level":3,"title":"7.2.1 如何设置绝对定位？","slug":"_7-2-1-如何设置绝对定位","link":"#_7-2-1-如何设置绝对定位","children":[]},{"level":3,"title":"7.2.2 绝对定位的参考点在哪里？","slug":"_7-2-2-绝对定位的参考点在哪里","link":"#_7-2-2-绝对定位的参考点在哪里","children":[]},{"level":3,"title":"7.2.3 绝对定位元素的特点：","slug":"_7-2-3-绝对定位元素的特点","link":"#_7-2-3-绝对定位元素的特点","children":[]}]},{"level":2,"title":"7.3 固定定位","slug":"_7-3-固定定位","link":"#_7-3-固定定位","children":[{"level":3,"title":"7.3.1 如何设置为固定定位？","slug":"_7-3-1-如何设置为固定定位","link":"#_7-3-1-如何设置为固定定位","children":[]},{"level":3,"title":"7.3.2 固定定位的参考点在哪里？","slug":"_7-3-2-固定定位的参考点在哪里","link":"#_7-3-2-固定定位的参考点在哪里","children":[]},{"level":3,"title":"7.3.3 固定定位元素的特点","slug":"_7-3-3-固定定位元素的特点","link":"#_7-3-3-固定定位元素的特点","children":[]}]},{"level":2,"title":"7.4 粘性定位","slug":"_7-4-粘性定位","link":"#_7-4-粘性定位","children":[{"level":3,"title":"7.4.1 如何设置为粘性定位？","slug":"_7-4-1-如何设置为粘性定位","link":"#_7-4-1-如何设置为粘性定位","children":[]},{"level":3,"title":"7.4.2 粘性定位的参考点在哪里？","slug":"_7-4-2-粘性定位的参考点在哪里","link":"#_7-4-2-粘性定位的参考点在哪里","children":[]},{"level":3,"title":"7.4.3 粘性定位元素的特点","slug":"_7-4-3-粘性定位元素的特点","link":"#_7-4-3-粘性定位元素的特点","children":[]}]},{"level":2,"title":"7.5 定位层级","slug":"_7-5-定位层级","link":"#_7-5-定位层级","children":[]},{"level":2,"title":"7.6 定位的特殊应用","slug":"_7-6-定位的特殊应用","link":"#_7-6-定位的特殊应用","children":[]},{"level":2,"title":"8.1 版心","slug":"_8-1-版心","link":"#_8-1-版心","children":[]},{"level":2,"title":"8.2 常用布局名词","slug":"_8-2-常用布局名词","link":"#_8-2-常用布局名词","children":[]},{"level":2,"title":"8.3 重置默认样式","slug":"_8-3-重置默认样式","link":"#_8-3-重置默认样式","children":[]}],"git":{"createdTime":1728589721000,"updatedTime":1729368407000,"contributors":[{"name":"situ-bei","email":"2606405907@qq.com","commits":4}]},"readingTime":{"minutes":39.27,"words":11781},"filePathRelative":"study/coding/CSS/CSS2基础.md","localizedDate":"2024年6月27日"}');export{u as comp,A as data};
